import{_ as i,c as a,S as t,o as e}from"./chunks/framework.lVPv1HRc.js";const c=JSON.parse('{"title":"Global Configuration Options","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/options/index.md","filePath":"en/guide/options/index.md"}'),n={name:"en/guide/options/index.md"};function l(p,s,o,h,d,r){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="global-configuration-options" tabindex="-1">Global Configuration Options <a class="header-anchor" href="#global-configuration-options" aria-label="Permalink to &quot;Global Configuration Options&quot;">​</a></h1><p><code>useOptions</code> is a global configuration hook function provided by Tune UI, used for managing global settings such as theme, size, internationalization, etc. of the component library.</p><h2 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-label="Permalink to &quot;Basic Usage&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useOptions } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tune-ui&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get configuration API</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">updateThemeColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">updateDefaultSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setLocale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">configOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="api-details" tabindex="-1">API Details <a class="header-anchor" href="#api-details" aria-label="Permalink to &quot;API Details&quot;">​</a></h2><h3 id="output-parameters" tabindex="-1">Output Parameters <a class="header-anchor" href="#output-parameters" aria-label="Permalink to &quot;Output Parameters&quot;">​</a></h3><p>The <code>useOptions</code> hook doesn&#39;t require any input parameters but returns the following methods and properties:</p><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>updateThemeColor</td><td><code>(theme: OptionsThemeType) =&gt; void</code></td><td>Update theme colors</td></tr><tr><td>updateDefaultSize</td><td><code>(size: ElSizeType) =&gt; void</code></td><td>Update default element size</td></tr><tr><td>updateLoadingOptions</td><td><code>(options: LoadingOptionsType) =&gt; void</code></td><td>Update loading configuration</td></tr><tr><td>setLocale</td><td><code>(locale: LocaleType) =&gt; void</code></td><td>Switch language</td></tr><tr><td>initOptions</td><td><code>() =&gt; OptionsType</code></td><td>Initialize and return default config</td></tr><tr><td>configOptions</td><td><code>Ref&lt;OptionsType&gt;</code></td><td>Reactive reference to current config</td></tr><tr><td>baseSize</td><td><code>ComputedRef&lt;ElSizeType&gt;</code></td><td>Computed property for current base size</td></tr><tr><td>locale</td><td><code>ComputedRef&lt;LocaleType&gt;</code></td><td>Computed property for current language</td></tr></tbody></table><h4 id="get-current-configuration" tabindex="-1">Get Current Configuration <a class="header-anchor" href="#get-current-configuration" aria-label="Permalink to &quot;Get Current Configuration&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get configuration API</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">configOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get current theme configuration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(configOptions.value.theme);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get current size</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(configOptions.value.elSize);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get current language</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(configOptions.value.locale);</span></span></code></pre></div><h4 id="reset-all-configurations" tabindex="-1">Reset All Configurations <a class="header-anchor" href="#reset-all-configurations" aria-label="Permalink to &quot;Reset All Configurations&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Get configuration API</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Reset all configurations to default values</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> defaultOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> initOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div>`,12)]))}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
