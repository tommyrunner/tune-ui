import{_ as n,C as l,c as i,S as r,H as o,m as e,a,o as s,ao as h}from"./chunks/framework.DspTsRPu.js";const k=JSON.parse('{"title":"图标组件","description":"","frontmatter":{},"headers":[],"relativePath":"components/icon.md","filePath":"components/icon.md"}'),m={name:"components/icon.md"};function p(c,t,u,b,f,x){const d=l("demo");return s(),i("div",null,[t[0]||(t[0]=r('<h1 id="图标组件" tabindex="-1">图标组件 <a class="header-anchor" href="#图标组件" aria-label="Permalink to &quot;图标组件&quot;">​</a></h1><p><img src="'+h+'" alt="图标组件"></p><p>图标是界面设计中的基础元素，可用于表示常见操作、导航提示、状态指示等，使界面更加直观。Tune UI 提供了一套常用的图标集合，支持自定义大小、颜色和类型。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>Tune UI 内置了丰富的图标，通过 <code>icon</code> 属性指定图标名称。</p>',5)),o(d,{"component-name":"icon",examples:"basic"}),t[1]||(t[1]=e("h2",{id:"图标尺寸",tabindex:"-1"},[a("图标尺寸 "),e("a",{class:"header-anchor",href:"#图标尺寸","aria-label":'Permalink to "图标尺寸"'},"​")],-1)),t[2]||(t[2]=e("p",null,[a("可以通过 "),e("code",null,"size"),a(" 属性自定义图标的尺寸，单位为 "),e("code",null,"px"),a("。")],-1)),o(d,{"component-name":"icon",examples:"size"}),t[3]||(t[3]=e("h2",{id:"图标颜色",tabindex:"-1"},[a("图标颜色 "),e("a",{class:"header-anchor",href:"#图标颜色","aria-label":'Permalink to "图标颜色"'},"​")],-1)),t[4]||(t[4]=e("p",null,"有两种方式可以自定义图标颜色：",-1)),t[5]||(t[5]=e("ol",null,[e("li",null,[a("使用 "),e("code",null,"color"),a(" 属性指定自定义颜色值")]),e("li",null,[a("使用 "),e("code",null,"type"),a(" 属性使用主题颜色")])],-1)),o(d,{"component-name":"icon",examples:"color"}),t[6]||(t[6]=e("h2",{id:"自定义图标",tabindex:"-1"},[a("自定义图标 "),e("a",{class:"header-anchor",href:"#自定义图标","aria-label":'Permalink to "自定义图标"'},"​")],-1)),t[7]||(t[7]=e("p",null,[a("除了内置图标，你还可以通过 "),e("code",null,"customIcon"),a(" 属性引入自定义的图标。")],-1)),o(d,{"component-name":"icon",examples:"custom"}),t[8]||(t[8]=e("h2",{id:"图标分类",tabindex:"-1"},[a("图标分类 "),e("a",{class:"header-anchor",href:"#图标分类","aria-label":'Permalink to "图标分类"'},"​")],-1)),t[9]||(t[9]=e("p",null,"以下是所有可用的图标，按照不同的类别进行了分组。点击图标可复制图标名称。",-1)),o(d,{"component-name":"icon",examples:"all"}),t[10]||(t[10]=r('<h2 id="图标-api" tabindex="-1">图标 API <a class="header-anchor" href="#图标-api" aria-label="Permalink to &quot;图标 API&quot;">​</a></h2><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>icon</td><td>图标名称</td><td>string</td><td>-</td><td>success-to</td></tr><tr><td>size</td><td>图标大小(px)</td><td>number</td><td>-</td><td>16</td></tr><tr><td>color</td><td>图标颜色</td><td>string</td><td>-</td><td>-</td></tr><tr><td>type</td><td>图标主题类型</td><td>string</td><td>default / primary / success / info / warning / danger</td><td>-</td></tr><tr><td>customIcon</td><td>自定义图标名称</td><td>string</td><td>-</td><td>-</td></tr></tbody></table><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><table><thead><tr><th>插槽名</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>图标内部的内容</td></tr></tbody></table><h3 id="样式变量" tabindex="-1">样式变量 <a class="header-anchor" href="#样式变量" aria-label="Permalink to &quot;样式变量&quot;">​</a></h3><p>图标组件使用了以下样式变量，可通过 SCSS 变量进行自定义：</p><table><thead><tr><th>变量名</th><th>说明</th></tr></thead><tbody><tr><td>$theme-color-primary</td><td>主题色-主要</td></tr><tr><td>$theme-color-success</td><td>主题色-成功</td></tr><tr><td>$theme-color-info</td><td>主题色-信息</td></tr><tr><td>$theme-color-warning</td><td>主题色-警告</td></tr><tr><td>$theme-color-danger</td><td>主题色-危险</td></tr></tbody></table>',8))])}const q=n(m,[["render",p]]);export{k as __pageData,q as default};
