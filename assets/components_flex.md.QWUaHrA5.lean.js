import{_ as o,C as n,c as s,S as l,H as r,m as d,a as e,o as i,an as h}from"./chunks/framework.DspTsRPu.js";const P=JSON.parse('{"title":"Flex 弹性布局","description":"","frontmatter":{},"headers":[],"relativePath":"components/flex.md","filePath":"components/flex.md"}'),x={name:"components/flex.md"};function p(m,t,b,u,f,c){const a=n("demo");return i(),s("div",null,[t[0]||(t[0]=l('<h1 id="flex-弹性布局" tabindex="-1">Flex 弹性布局 <a class="header-anchor" href="#flex-弹性布局" aria-label="Permalink to &quot;Flex 弹性布局&quot;">​</a></h1><p><img src="'+h+'" alt="Flex 弹性布局"></p><p>Flex 组件是一个基于 Flexbox 布局模型的容器组件，用于创建灵活、响应式的布局结构。组件提供了10栏栅格系统，支持响应式布局，并且可以控制元素间距、排序和对齐方式。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>使用 <code>t-flex</code> 和 <code>t-flex-group</code> 组件创建简单的弹性布局。</p>',5)),r(a,{"component-name":"flex",examples:"basic"}),t[1]||(t[1]=d("h2",{id:"栅格配置",tabindex:"-1"},[e("栅格配置 "),d("a",{class:"header-anchor",href:"#栅格配置","aria-label":'Permalink to "栅格配置"'},"​")],-1)),t[2]||(t[2]=d("p",null,[e("通过 "),d("code",null,"span"),e(" 和 "),d("code",null,"offset"),e(" 属性创建栅格布局，总栅格数为10。")],-1)),r(a,{"component-name":"flex",examples:"grid"}),t[3]||(t[3]=d("h2",{id:"排序",tabindex:"-1"},[e("排序 "),d("a",{class:"header-anchor",href:"#排序","aria-label":'Permalink to "排序"'},"​")],-1)),t[4]||(t[4]=d("p",null,[e("使用 "),d("code",null,"sort"),e(" 属性控制元素的显示顺序。")],-1)),r(a,{"component-name":"flex",examples:"sort"}),t[5]||(t[5]=d("h2",{id:"对齐方式",tabindex:"-1"},[e("对齐方式 "),d("a",{class:"header-anchor",href:"#对齐方式","aria-label":'Permalink to "对齐方式"'},"​")],-1)),t[6]||(t[6]=d("p",null,[e("通过 "),d("code",null,"justify"),e(" 和 "),d("code",null,"align"),e(" 属性设置弹性容器内元素的对齐方式。")],-1)),r(a,{"component-name":"flex",examples:"align"}),t[7]||(t[7]=d("h2",{id:"间距设置",tabindex:"-1"},[e("间距设置 "),d("a",{class:"header-anchor",href:"#间距设置","aria-label":'Permalink to "间距设置"'},"​")],-1)),t[8]||(t[8]=d("p",null,[e("使用 "),d("code",null,"gap"),e(" 属性设置元素之间的间距。")],-1)),r(a,{"component-name":"flex",examples:"gap"}),t[9]||(t[9]=d("h2",{id:"响应式布局",tabindex:"-1"},[e("响应式布局 "),d("a",{class:"header-anchor",href:"#响应式布局","aria-label":'Permalink to "响应式布局"'},"​")],-1)),t[10]||(t[10]=d("p",null,"Flex 组件支持响应式布局，可以根据不同屏幕尺寸自动调整布局。",-1)),r(a,{"component-name":"flex",examples:"responsive"}),t[11]||(t[11]=l('<h2 id="flex-api" tabindex="-1">Flex API <a class="header-anchor" href="#flex-api" aria-label="Permalink to &quot;Flex API&quot;">​</a></h2><h3 id="flex-属性" tabindex="-1">Flex 属性 <a class="header-anchor" href="#flex-属性" aria-label="Permalink to &quot;Flex 属性&quot;">​</a></h3><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>span</td><td>栅格占据的列数</td><td>number</td><td>0-10</td><td>-</td></tr><tr><td>offset</td><td>栅格左侧的间隔</td><td>number</td><td>0-10</td><td>0</td></tr><tr><td>sort</td><td>元素的排序</td><td>number</td><td>-</td><td>-</td></tr><tr><td>xs</td><td>&lt;768px 响应式栅格数</td><td>number</td><td>0-10</td><td>-</td></tr><tr><td>sm</td><td>≥768px 响应式栅格数</td><td>number</td><td>0-10</td><td>-</td></tr><tr><td>md</td><td>≥992px 响应式栅格数</td><td>number</td><td>0-10</td><td>-</td></tr><tr><td>lg</td><td>≥1200px 响应式栅格数</td><td>number</td><td>0-10</td><td>-</td></tr><tr><td>xl</td><td>≥1920px 响应式栅格数</td><td>number</td><td>0-10</td><td>-</td></tr></tbody></table><h3 id="flexgroup-属性" tabindex="-1">FlexGroup 属性 <a class="header-anchor" href="#flexgroup-属性" aria-label="Permalink to &quot;FlexGroup 属性&quot;">​</a></h3><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>justify</td><td>主轴对齐方式</td><td>string</td><td>start/end/center/space-around/space-between/space-evenly</td><td>start</td></tr><tr><td>align</td><td>交叉轴对齐方式</td><td>string</td><td>start/center/end</td><td>-</td></tr><tr><td>gap</td><td>元素间距(px)</td><td>number</td><td>-</td><td>12</td></tr></tbody></table><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><table><thead><tr><th>插槽名</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>默认插槽，放置子元素</td></tr></tbody></table><h3 id="样式变量" tabindex="-1">样式变量 <a class="header-anchor" href="#样式变量" aria-label="Permalink to &quot;样式变量&quot;">​</a></h3><p>Flex 组件使用了以下样式变量，可通过 SCSS 变量进行自定义：</p><table><thead><tr><th>变量名</th><th>说明</th></tr></thead><tbody><tr><td>$bg-color-default</td><td>默认背景颜色</td></tr><tr><td>$border-color-default</td><td>默认边框颜色</td></tr><tr><td>$text-color-default</td><td>默认文本颜色</td></tr></tbody></table>',10))])}const k=o(x,[["render",p]]);export{P as __pageData,k as default};
