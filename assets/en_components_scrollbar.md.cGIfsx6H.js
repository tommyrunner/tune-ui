import{_ as u,C as b,o as l,c as r,H as a,w as h,m as t,F as d,D as i,t as n,d as y,h as g,S,a as c,aH as k}from"./chunks/framework.MEhA6lwx.js";const $={},P={class:"example-container"},z={class:"scrollbar-content"};function w(m,s){const e=b("t-scrollbar");return l(),r("div",P,[a(e,null,{default:h(()=>[t("div",z,[(l(),r(d,null,i(20,o=>t("p",{key:o,class:"scrollbar-item"},n(o)+". Scroll content example - This is sample text to demonstrate basic scrollbar usage. ",1)),64))])]),_:1})])}const C=u($,[["render",w],["__scopeId","data-v-d8ed3973"]]),H={},q={class:"example-container"},E={class:"scrollbar-content"};function T(m,s){const e=b("t-scrollbar");return l(),r("div",q,[a(e,{permanent:!0},{default:h(()=>[t("div",E,[(l(),r(d,null,i(20,o=>t("p",{key:o,class:"scrollbar-item"},n(o)+". Permanent scrollbar example - Setting the permanent attribute to true makes the scrollbar always visible. ",1)),64))])]),_:1})])}const V=u(H,[["render",T],["__scopeId","data-v-f0979355"]]),D={},N={class:"example-container"},B={class:"scrollbar-horizontal-content"},I={class:"month-wrapper"},M={class:"month-title"},A={class:"days-grid"};function L(m,s){const e=b("t-scrollbar");return l(),r("div",N,[a(e,null,{default:h(()=>[t("div",B,[t("div",I,[(l(),r(d,null,i(12,o=>t("div",{key:o,class:"month-item"},[t("div",M,"Month "+n(o),1),t("div",A,[(l(),r(d,null,i(30,_=>t("div",{key:_,class:"day-cell"},n(_),1)),64))])])),64))])])]),_:1})])}const Y=u(D,[["render",L],["__scopeId","data-v-4c0f5618"]]),U={class:"example-container"},W={class:"scrollbar-section"},X={class:"scrollbar-content vertical"},F={class:"event-info"},O={class:"scrollbar-section"},J={class:"scrollbar-content horizontal"},j={class:"horizontal-wrapper"},G={class:"event-info"},K=y({__name:"events",setup(m){const s=g(0),e=g(0),o=v=>{s.value=v.scrollTop},_=v=>{e.value=v.scrollLeft};return(v,f)=>{const x=b("t-scrollbar");return l(),r("div",U,[t("div",W,[f[0]||(f[0]=t("h4",null,"Vertical Scroll Event",-1)),a(x,{onScrollY:o},{default:h(()=>[t("div",X,[(l(),r(d,null,i(20,p=>t("p",{key:p,class:"scrollbar-item"},n(p)+". Vertical scroll example",1)),64))])]),_:1}),t("div",F,"Vertical scroll position: "+n(s.value)+"px",1)]),t("div",O,[f[1]||(f[1]=t("h4",null,"Horizontal Scroll Event",-1)),a(x,{onScrollX:_},{default:h(()=>[t("div",J,[t("div",j,[(l(),r(d,null,i(20,p=>t("div",{key:p,class:"horizontal-item"},n(p)+". Horizontal scroll example",1)),64))])])]),_:1}),t("div",G,"Horizontal scroll position: "+n(e.value)+"px",1)])])}}}),Q=u(K,[["__scopeId","data-v-646cb51c"]]),R={},Z={class:"example-container"},tt={class:"scrollbar-row"},et={class:"scrollbar-column"},ot={class:"scrollbar-content"},lt={class:"scrollbar-column"},rt={class:"scrollbar-content"};function at(m,s){const e=b("t-scrollbar");return l(),r("div",Z,[t("div",tt,[t("div",et,[s[0]||(s[0]=t("h4",null,"Height: 200px",-1)),a(e,{height:200},{default:h(()=>[t("div",ot,[(l(),r(d,null,i(20,o=>t("p",{key:o,class:"scrollbar-item"},n(o)+". Custom height example",1)),64))])]),_:1})]),t("div",lt,[s[1]||(s[1]=t("h4",null,"Height: 400px",-1)),a(e,{height:400},{default:h(()=>[t("div",rt,[(l(),r(d,null,i(20,o=>t("p",{key:o,class:"scrollbar-item"},n(o)+". Custom height example",1)),64))])]),_:1})])])])}const st=u(R,[["render",at],["__scopeId","data-v-3f91e8ba"]]),dt=JSON.parse('{"title":"Scrollbar Component","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/scrollbar.md","filePath":"en/components/scrollbar.md"}'),nt={name:"en/components/scrollbar.md"},it=y({...nt,setup(m){return(s,e)=>{const o=b("demo");return l(),r("div",null,[e[0]||(e[0]=S('<h1 id="scrollbar-component" tabindex="-1">Scrollbar Component <a class="header-anchor" href="#scrollbar-component" aria-label="Permalink to &quot;Scrollbar Component&quot;">​</a></h1><p><img src="'+k+'" alt="Scrollbar Component"></p><p>Scrollbar component provides a custom-styled scrollbar container to replace the browser&#39;s native scrollbar, supporting both vertical and horizontal scrolling with customizable styles and behavior.</p><h2 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-label="Permalink to &quot;Basic Usage&quot;">​</a></h2><p>The most basic usage is to create a scrollable container with a fixed height. When content exceeds the container height, a scrollbar will automatically appear.</p>',5)),a(o,{component:C,name:"scrollbar",examples:"basic"}),e[1]||(e[1]=t("h2",{id:"permanent-scrollbar",tabindex:"-1"},[c("Permanent Scrollbar "),t("a",{class:"header-anchor",href:"#permanent-scrollbar","aria-label":'Permalink to "Permanent Scrollbar"'},"​")],-1)),e[2]||(e[2]=t("p",null,[c("By default, the scrollbar only appears on hover. Setting the "),t("code",null,"permanent"),c(" attribute to "),t("code",null,"true"),c(" makes the scrollbar always visible.")],-1)),a(o,{component:V,name:"scrollbar",examples:"permanent"}),e[3]||(e[3]=t("h2",{id:"horizontal-scrolling",tabindex:"-1"},[c("Horizontal Scrolling "),t("a",{class:"header-anchor",href:"#horizontal-scrolling","aria-label":'Permalink to "Horizontal Scrolling"'},"​")],-1)),e[4]||(e[4]=t("p",null,"When content width exceeds the container width, a horizontal scrollbar will automatically appear.",-1)),a(o,{component:Y,name:"scrollbar",examples:"horizontal"}),e[5]||(e[5]=t("h2",{id:"scroll-events",tabindex:"-1"},[c("Scroll Events "),t("a",{class:"header-anchor",href:"#scroll-events","aria-label":'Permalink to "Scroll Events"'},"​")],-1)),e[6]||(e[6]=t("p",null,"The scrollbar component provides vertical and horizontal scroll events to get real-time scroll position.",-1)),a(o,{component:Q,name:"scrollbar",examples:"events"}),e[7]||(e[7]=t("h2",{id:"custom-height",tabindex:"-1"},[c("Custom Height "),t("a",{class:"header-anchor",href:"#custom-height","aria-label":'Permalink to "Custom Height"'},"​")],-1)),e[8]||(e[8]=t("p",null,[c("You can specify the height of the scroll container through the "),t("code",null,"height"),c(" attribute.")],-1)),a(o,{component:st,name:"scrollbar",examples:"height"}),e[9]||(e[9]=S('<h2 id="scrollbar-component-api" tabindex="-1">Scrollbar Component API <a class="header-anchor" href="#scrollbar-component-api" aria-label="Permalink to &quot;Scrollbar Component API&quot;">​</a></h2><h3 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td><code>height</code></td><td>Container height</td><td><code>number</code></td><td>—</td><td><code>300</code></td></tr><tr><td><code>permanent</code></td><td>Whether scrollbar is always visible</td><td><code>boolean</code></td><td>—</td><td><code>false</code></td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table><thead><tr><th>Event Name</th><th>Description</th><th>Callback Parameters</th></tr></thead><tbody><tr><td><code>scroll-y</code></td><td>Vertical scroll event</td><td><code>(element: HTMLElement)</code></td></tr><tr><td><code>scroll-x</code></td><td>Horizontal scroll event</td><td><code>(element: HTMLElement)</code></td></tr><tr><td><code>click-track</code></td><td>Scrollbar track click event</td><td><code>(element: HTMLElement)</code></td></tr></tbody></table><h3 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h3><table><thead><tr><th>Slot Name</th><th>Description</th><th>Scope Parameters</th></tr></thead><tbody><tr><td><code>default</code></td><td>Content of the scroll container</td><td>—</td></tr></tbody></table><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><p>The component exposes the following methods, which can be called through ref:</p><table><thead><tr><th>Method Name</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td><code>scrollTo</code></td><td>Scroll to specified position</td><td><code>(options: ScrollToOptions)</code></td></tr><tr><td><code>updateScrollbar</code></td><td>Update scrollbar state</td><td>—</td></tr><tr><td><code>setScrollbar</code></td><td>Set scrollbar position</td><td><code>(mobile: number, direction: &#39;top&#39; | &#39;left&#39; | &#39;none&#39;)</code></td></tr></tbody></table><h3 id="style-variables" tabindex="-1">Style Variables <a class="header-anchor" href="#style-variables" aria-label="Permalink to &quot;Style Variables&quot;">​</a></h3><p>Scrollbar component uses the following style variables, which can be customized through SCSS variables:</p><table><thead><tr><th>Variable Name</th><th>Description</th></tr></thead><tbody><tr><td>$scrollbar-size</td><td>Scrollbar size</td></tr><tr><td>$scrollbar-bg</td><td>Scrollbar background color</td></tr><tr><td>$scrollbar-thumb-color</td><td>Scrollbar thumb color</td></tr><tr><td>$bg-color-default</td><td>Default background color</td></tr></tbody></table>',13))])}}});export{dt as __pageData,it as default};
