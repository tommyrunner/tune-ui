import{_ as l,C as n,c as s,S as o,H as a,m as t,a as e,o as i,ay as h}from"./chunks/framework.DspTsRPu.js";const k=JSON.parse('{"title":"滑块组件","description":"","frontmatter":{},"headers":[],"relativePath":"components/slider.md","filePath":"components/slider.md"}'),m={name:"components/slider.md"};function b(p,d,u,c,f,x){const r=n("demo");return i(),s("div",null,[d[0]||(d[0]=o('<h1 id="滑块组件" tabindex="-1">滑块组件 <a class="header-anchor" href="#滑块组件" aria-label="Permalink to &quot;滑块组件&quot;">​</a></h1><p><img src="'+h+'" alt="滑块组件"></p><p>滑块组件允许用户在一个固定区间内通过滑动来选择一个值或一个范围。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>基础滑块用于在连续或离散的区间内选择单个值。</p>',5)),a(r,{"component-name":"slider",examples:"basic"}),d[1]||(d[1]=t("h2",{id:"范围选择",tabindex:"-1"},[e("范围选择 "),t("a",{class:"header-anchor",href:"#范围选择","aria-label":'Permalink to "范围选择"'},"​")],-1)),d[2]||(d[2]=t("p",null,[e("设置 "),t("code",null,"range"),e(" 属性可以开启范围选择，适用于需要选择某个数值区间的场景。")],-1)),a(r,{"component-name":"slider",examples:"range"}),d[3]||(d[3]=t("h2",{id:"显示间断点",tabindex:"-1"},[e("显示间断点 "),t("a",{class:"header-anchor",href:"#显示间断点","aria-label":'Permalink to "显示间断点"'},"​")],-1)),d[4]||(d[4]=t("p",null,[e("当 "),t("code",null,"step"),e(" 不为 1 时，可以设置 "),t("code",null,"show-stops"),e(" 属性显示间断点，让用户更清晰地知道可选的值。")],-1)),a(r,{"component-name":"slider",examples:"stops"}),d[5]||(d[5]=t("h2",{id:"带标记的滑块",tabindex:"-1"},[e("带标记的滑块 "),t("a",{class:"header-anchor",href:"#带标记的滑块","aria-label":'Permalink to "带标记的滑块"'},"​")],-1)),d[6]||(d[6]=t("p",null,[e("使用 "),t("code",null,"marks"),e(" 属性可以自定义滑块上的标记，每个标记可以是简单的文本或带有自定义样式的对象。")],-1)),a(r,{"component-name":"slider",examples:"marks"}),d[7]||(d[7]=t("h2",{id:"垂直滑块",tabindex:"-1"},[e("垂直滑块 "),t("a",{class:"header-anchor",href:"#垂直滑块","aria-label":'Permalink to "垂直滑块"'},"​")],-1)),d[8]||(d[8]=t("p",null,[e("设置 "),t("code",null,"vertical"),e(" 属性为 "),t("code",null,"true"),e(" 可以使滑块变为垂直方向，同时需要设置 "),t("code",null,"height"),e(" 指定滑块高度。")],-1)),a(r,{"component-name":"slider",examples:"vertical"}),d[9]||(d[9]=t("h2",{id:"滑块与输入框结合",tabindex:"-1"},[e("滑块与输入框结合 "),t("a",{class:"header-anchor",href:"#滑块与输入框结合","aria-label":'Permalink to "滑块与输入框结合"'},"​")],-1)),d[10]||(d[10]=t("p",null,"滑块可以与数字输入框组合使用，提供更精确的数值输入方式。",-1)),a(r,{"component-name":"slider",examples:"input"}),d[11]||(d[11]=t("h2",{id:"提示设置",tabindex:"-1"},[e("提示设置 "),t("a",{class:"header-anchor",href:"#提示设置","aria-label":'Permalink to "提示设置"'},"​")],-1)),d[12]||(d[12]=t("p",null,[e("可以通过 "),t("code",null,"show-tooltip"),e("、"),t("code",null,"format-tooltip"),e(" 和 "),t("code",null,"placement"),e(" 属性自定义滑块的提示信息。")],-1)),a(r,{"component-name":"slider",examples:"tooltip"}),d[13]||(d[13]=t("h2",{id:"事件处理",tabindex:"-1"},[e("事件处理 "),t("a",{class:"header-anchor",href:"#事件处理","aria-label":'Permalink to "事件处理"'},"​")],-1)),d[14]||(d[14]=t("p",null,[e("滑块组件提供了 "),t("code",null,"change"),e(" 和 "),t("code",null,"input"),e(" 事件，分别在值改变完成和值改变过程中触发。")],-1)),a(r,{"component-name":"slider",examples:"events"}),d[15]||(d[15]=o('<h2 id="滑块组件-api" tabindex="-1">滑块组件 API <a class="header-anchor" href="#滑块组件-api" aria-label="Permalink to &quot;滑块组件 API&quot;">​</a></h2><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>绑定值</td><td>number / number[]</td><td>—</td><td>—</td></tr><tr><td>min</td><td>最小值</td><td>number</td><td>—</td><td>0</td></tr><tr><td>max</td><td>最大值</td><td>number</td><td>—</td><td>100</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>step</td><td>步长</td><td>number</td><td>—</td><td>1</td></tr><tr><td>size</td><td>滚动条大小（宽度/高度）</td><td>number</td><td>—</td><td>6</td></tr><tr><td>show-stops</td><td>是否显示间断点</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-tooltip</td><td>是否显示提示信息</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>format-tooltip</td><td>格式化提示信息的函数</td><td>(val: number) =&gt; string</td><td>—</td><td>—</td></tr><tr><td>range</td><td>是否开启选择范围</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>vertical</td><td>是否为垂直模式</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>height</td><td>滑块高度，垂直模式必填</td><td>string</td><td>—</td><td>—</td></tr><tr><td>tooltip-class</td><td>tooltip 的自定义类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>placement</td><td>Tooltip 出现的位置</td><td>string</td><td>top / right / bottom / left</td><td>top</td></tr><tr><td>marks</td><td>标记</td><td><code>Record&lt;number, string | MarkObject&gt;</code></td><td>—</td><td>—</td></tr><tr><td>debounce</td><td>输入框去抖动延迟（毫秒）</td><td>number</td><td>—</td><td>300</td></tr><tr><td>status</td><td>状态类型</td><td>string</td><td>success / exception / warning</td><td>—</td></tr></tbody></table><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>值改变完成时触发</td><td>(value: <code>number | number[]</code>)</td></tr><tr><td>input</td><td>值改变过程中触发</td><td>(value: <code>number | number[]</code>)</td></tr></tbody></table><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><table><thead><tr><th>插槽名</th><th>说明</th><th>作用域参数</th></tr></thead><tbody><tr><td>button</td><td>自定义滑块按钮</td><td>{ value: <code>number</code>, index: <code>number</code> }</td></tr></tbody></table><h3 id="标记对象类型" tabindex="-1">标记对象类型 <a class="header-anchor" href="#标记对象类型" aria-label="Permalink to &quot;标记对象类型&quot;">​</a></h3><p>当使用对象格式定义标记时，可以包含以下属性：</p><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>label</td><td>标记显示的文本</td><td>string</td></tr><tr><td>style</td><td>标记的自定义样式</td><td><code>Record&lt;string, string&gt;</code></td></tr></tbody></table><h3 id="样式变量" tabindex="-1">样式变量 <a class="header-anchor" href="#样式变量" aria-label="Permalink to &quot;样式变量&quot;">​</a></h3><p>滑块组件使用了以下样式变量，可通过 SCSS 变量进行自定义：</p><table><thead><tr><th>变量名</th><th>说明</th></tr></thead><tbody><tr><td>$theme-color-primary</td><td>主题色-主要</td></tr><tr><td>$theme-color-success</td><td>主题色-成功</td></tr><tr><td>$theme-color-warning</td><td>主题色-警告</td></tr><tr><td>$theme-color-danger</td><td>主题色-危险</td></tr><tr><td>$border-color-default</td><td>边框颜色-默认</td></tr></tbody></table>',13))])}const P=l(m,[["render",b]]);export{k as __pageData,P as default};
