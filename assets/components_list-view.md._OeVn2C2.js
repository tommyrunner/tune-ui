import{_ as l,C as i,c as n,S as o,H as r,m as d,a as e,o as s,aA as h}from"./chunks/framework.DspTsRPu.js";const q=JSON.parse('{"title":"列表视图组件","description":"","frontmatter":{},"headers":[],"relativePath":"components/list-view.md","filePath":"components/list-view.md"}'),m={name:"components/list-view.md"};function p(b,t,u,c,x,f){const a=i("demo");return s(),n("div",null,[t[0]||(t[0]=o('<h1 id="列表视图组件" tabindex="-1">列表视图组件 <a class="header-anchor" href="#列表视图组件" aria-label="Permalink to &quot;列表视图组件&quot;">​</a></h1><p><img src="'+h+'" alt="列表视图组件"></p><p>列表视图组件用于展示大量数据，支持虚拟滚动、固定行和自定义布局。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>基础列表视图用于展示一组数据。</p>',5)),r(a,{"component-name":"list-view",examples:"basic"}),t[1]||(t[1]=d("h2",{id:"空数据展示",tabindex:"-1"},[e("空数据展示 "),d("a",{class:"header-anchor",href:"#空数据展示","aria-label":'Permalink to "空数据展示"'},"​")],-1)),t[2]||(t[2]=d("p",null,"当列表数据为空时，会显示空状态提示。",-1)),r(a,{"component-name":"list-view",examples:"empty"}),t[3]||(t[3]=d("h2",{id:"虚拟滚动",tabindex:"-1"},[e("虚拟滚动 "),d("a",{class:"header-anchor",href:"#虚拟滚动","aria-label":'Permalink to "虚拟滚动"'},"​")],-1)),t[4]||(t[4]=d("p",null,"当需要展示大量数据时，可以启用虚拟滚动以提高性能。",-1)),r(a,{"component-name":"list-view",examples:"virtual"}),t[5]||(t[5]=d("h2",{id:"固定项",tabindex:"-1"},[e("固定项 "),d("a",{class:"header-anchor",href:"#固定项","aria-label":'Permalink to "固定项"'},"​")],-1)),t[6]||(t[6]=d("p",null,[e("通过 "),d("code",null,"itemFixed"),e(" 属性可以设置特定项固定不随滚动而移动。")],-1)),r(a,{"component-name":"list-view",examples:"fixed"}),t[7]||(t[7]=d("h2",{id:"列表插槽",tabindex:"-1"},[e("列表插槽 "),d("a",{class:"header-anchor",href:"#列表插槽","aria-label":'Permalink to "列表插槽"'},"​")],-1)),t[8]||(t[8]=d("p",null,"列表视图提供了头部和底部插槽，用于添加额外的内容。",-1)),r(a,{"component-name":"list-view",examples:"slots"}),t[9]||(t[9]=o('<h2 id="列表视图-api" tabindex="-1">列表视图 API <a class="header-anchor" href="#列表视图-api" aria-label="Permalink to &quot;列表视图 API&quot;">​</a></h2><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>listData</td><td>列表数据源</td><td>array</td><td>—</td><td>[]</td></tr><tr><td>height</td><td>列表容器高度</td><td>number</td><td>—</td><td>—</td></tr><tr><td>isVirtualized</td><td>是否启用虚拟滚动</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>itemHeight</td><td>虚拟列表项固定高度</td><td>number</td><td>—</td><td>—</td></tr><tr><td>itemFixed</td><td>固定项判断函数</td><td>function(index, row)</td><td>—</td><td>—</td></tr><tr><td>emptyText</td><td>空数据提示文本</td><td>string</td><td>—</td><td>暂无数据</td></tr></tbody></table><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>scroll</td><td>列表滚动时触发</td><td>(element: <code>HTMLElement</code>)</td></tr><tr><td>update-view</td><td>视图更新时触发</td><td>(element: <code>HTMLElement</code>)</td></tr></tbody></table><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><table><thead><tr><th>插槽名</th><th>说明</th><th>作用域参数</th></tr></thead><tbody><tr><td>default</td><td>列表项内容</td><td>{ row: <code>any</code>, index: <code>number</code> }</td></tr><tr><td>head</td><td>列表头部内容</td><td>—</td></tr><tr><td>footer</td><td>列表底部内容</td><td>—</td></tr><tr><td>empty</td><td>空状态内容</td><td>—</td></tr></tbody></table><h3 id="样式变量" tabindex="-1">样式变量 <a class="header-anchor" href="#样式变量" aria-label="Permalink to &quot;样式变量&quot;">​</a></h3><p>列表视图组件使用了以下样式变量，可通过 SCSS 变量进行自定义：</p><table><thead><tr><th>变量名</th><th>说明</th></tr></thead><tbody><tr><td>$border-color-default</td><td>边框颜色-默认</td></tr><tr><td>$z-index-dropdown</td><td>层级-下拉菜单</td></tr><tr><td>$bg-color-overlay</td><td>背景色-遮罩层</td></tr></tbody></table>',10))])}const v=l(m,[["render",p]]);export{q as __pageData,v as default};
