import{_ as g,h as b,C as u,o as h,c as p,H as r,m as e,F as C,D as F,t as f,a as s,w as $,n as E,P as A,e as P,d as B,S as x,aJ as q}from"./chunks/framework.MEhA6lwx.js";const S={class:"tree-demo"},N={__name:"basic",setup(m){const o=b([{id:"1",label:"一级节点 1",children:[{id:"1-1",label:"二级节点 1-1",children:[{id:"1-1-1",label:"三级节点 1-1-1"},{id:"1-1-2",label:"三级节点 1-1-2"}]},{id:"1-2",label:"二级节点 1-2"}]},{id:"2",label:"一级节点 2",children:[{id:"2-1",label:"二级节点 2-1"},{id:"2-2",label:"二级节点 2-2"}]},{id:"3",label:"一级节点 3"}]);return(t,l)=>{const n=u("t-tree");return h(),p("div",S,[r(n,{data:o.value},null,8,["data"])])}}},j=g(N,[["__scopeId","data-v-47f35a2c"]]),W={class:"tree-demo"},I={class:"result-container"},D={key:0,class:"result-list"},J={key:1,class:"result-empty"},T={__name:"checkable",setup(m){const o=b([{id:"1",label:"一级节点 1",children:[{id:"1-1",label:"二级节点 1-1",children:[{id:"1-1-1",label:"三级节点 1-1-1"},{id:"1-1-2",label:"三级节点 1-1-2"}]},{id:"1-2",label:"二级节点 1-2"}]},{id:"2",label:"一级节点 2",children:[{id:"2-1",label:"二级节点 2-1"},{id:"2-2",label:"二级节点 2-2"}]}]),t=b([]),l=n=>{t.value=n.map(d=>{const k=(i,a)=>{for(const c of i){if(c.id===a)return c.label;if(c.children){const _=k(c.children,a);if(_)return _}}return null};return k(o.value,d)}).filter(Boolean)};return(n,d)=>{const k=u("t-tree");return h(),p("div",W,[r(k,{data:o.value,checkable:"",onCheckChange:l},null,8,["data"]),e("div",I,[d[0]||(d[0]=e("div",{class:"result-title"},"当前选中的节点：",-1)),t.value.length?(h(),p("div",D,[(h(!0),p(C,null,F(t.value,(i,a)=>(h(),p("div",{key:a,class:"result-item"},f(i),1))),128))])):(h(),p("div",J,"暂无选中节点"))])])}}},M=g(T,[["__scopeId","data-v-1bd4c22f"]]),V={class:"tree-demo"},K={__name:"default-state",setup(m){const o=b([{id:"1",label:"一级节点 1",children:[{id:"1-1",label:"二级节点 1-1",children:[{id:"1-1-1",label:"三级节点 1-1-1"},{id:"1-1-2",label:"三级节点 1-1-2"}]},{id:"1-2",label:"二级节点 1-2"}]},{id:"2",label:"一级节点 2",children:[{id:"2-1",label:"二级节点 2-1"},{id:"2-2",label:"二级节点 2-2"}]}]),t=b(["1","1-1"]),l=b(["1-1-2","2-1"]);return(n,d)=>{const k=u("t-tree");return h(),p("div",V,[r(k,{data:o.value,checkable:"",expanded:t.value,checked:l.value},null,8,["data","expanded","checked"]),d[0]||(d[0]=e("div",{class:"description"},[s(" 默认展开节点: 一级节点 1, 二级节点 1-1"),e("br"),s(" 默认选中节点: 三级节点 1-1-2, 二级节点 2-1 ")],-1))])}}},z=g(K,[["__scopeId","data-v-9665fab9"]]),H={class:"tree-demo"},L={class:"demo-row"},O={class:"demo-row"},R={__name:"accordion",setup(m){const o=b([{id:"1",label:"一级节点 1",children:[{id:"1-1",label:"二级节点 1-1"},{id:"1-2",label:"二级节点 1-2"},{id:"1-3",label:"二级节点 1-3"}]},{id:"2",label:"一级节点 2",children:[{id:"2-1",label:"二级节点 2-1"},{id:"2-2",label:"二级节点 2-2"}]},{id:"3",label:"一级节点 3",children:[{id:"3-1",label:"二级节点 3-1"},{id:"3-2",label:"二级节点 3-2"}]}]);return(t,l)=>{const n=u("t-tree");return h(),p("div",H,[e("div",L,[l[0]||(l[0]=e("div",{class:"label"},"普通模式:",-1)),r(n,{data:o.value},null,8,["data"])]),e("div",O,[l[1]||(l[1]=e("div",{class:"label"},"手风琴模式:",-1)),r(n,{data:o.value,accordion:""},null,8,["data"])])])}}},G=g(R,[["__scopeId","data-v-74e59de8"]]),Q={class:"tree-demo"},U={class:"demo-row"},X={class:"demo-row"},Y={__name:"disabled",setup(m){const o=b([{id:"1",label:"一级节点 1",children:[{id:"1-1",label:"二级节点 1-1",disabled:!0,children:[{id:"1-1-1",label:"三级节点 1-1-1"}]},{id:"1-2",label:"二级节点 1-2"}]},{id:"2",label:"一级节点 2",children:[{id:"2-1",label:"二级节点 2-1",disabled:!0},{id:"2-2",label:"二级节点 2-2"}]}]),t=b([{id:"1",label:"一级节点 1",children:[{id:"1-1",label:"二级节点 1-1",children:[{id:"1-1-1",label:"三级节点 1-1-1"}]},{id:"1-2",label:"二级节点 1-2"}]},{id:"2",label:"一级节点 2",children:[{id:"2-1",label:"二级节点 2-1"},{id:"2-2",label:"二级节点 2-2"}]}]);return(l,n)=>{const d=u("t-tree");return h(),p("div",Q,[e("div",U,[n[0]||(n[0]=e("div",{class:"label"},"单个节点禁用:",-1)),r(d,{data:o.value,checkable:""},null,8,["data"])]),e("div",X,[n[1]||(n[1]=e("div",{class:"label"},"整棵树禁用:",-1)),r(d,{data:t.value,checkable:"",disabled:""},null,8,["data"])])])}}},Z=g(Y,[["__scopeId","data-v-a35d096e"]]),w={class:"tree-demo"},ee={class:"custom-node"},te={class:"node-label"},de={__name:"custom-node",setup(m){const o=b([{id:"1",label:"项目文件",tag:"文件夹",children:[{id:"1-1",label:"源代码",tag:"文件夹",children:[{id:"1-1-1",label:"index.html",tag:"HTML"},{id:"1-1-2",label:"app.js",tag:"JS"},{id:"1-1-3",label:"style.css",tag:"CSS"}]},{id:"1-2",label:"资源文件",tag:"文件夹",children:[{id:"1-2-1",label:"logo.png",tag:"图片"},{id:"1-2-2",label:"banner.jpg",tag:"图片"}]},{id:"1-3",label:"README.md",tag:"MD"}]},{id:"2",label:"配置文件",tag:"文件夹",children:[{id:"2-1",label:"package.json",tag:"JSON"},{id:"2-2",label:".gitignore",tag:"配置"}]}]),t=d=>{var a,c;if(((a=d==null?void 0:d.data)==null?void 0:a.children)&&d.data.children.length>0)return d.isExpanded?"icon icon-folder-open":"icon icon-folder";const i=((c=d==null?void 0:d.data)==null?void 0:c.label)||"";return i.endsWith(".html")?"icon icon-html":i.endsWith(".js")?"icon icon-js":i.endsWith(".css")?"icon icon-css":i.endsWith(".json")?"icon icon-json":i.endsWith(".md")?"icon icon-markdown":i.endsWith(".png")||i.endsWith(".jpg")?"icon icon-image":"icon icon-file"},l=d=>{var a,c;if(((a=d==null?void 0:d.data)==null?void 0:a.children)&&d.data.children.length>0)return"#f9a825";const i=((c=d==null?void 0:d.data)==null?void 0:c.label)||"";return i.endsWith(".html")?"#e44d26":i.endsWith(".js")?"#f0db4f":i.endsWith(".css")?"#264de4":i.endsWith(".json")?"#f0a050":i.endsWith(".md")?"#2196f3":i.endsWith(".png")||i.endsWith(".jpg")?"#4caf50":"#607d8b"},n=d=>({文件夹:"tag-folder",HTML:"tag-html",JS:"tag-js",CSS:"tag-css",JSON:"tag-json",MD:"tag-md",图片:"tag-image",配置:"tag-config"})[d]||"tag-default";return(d,k)=>{const i=u("t-tree");return h(),p("div",w,[r(i,{data:o.value},{default:$(a=>{var c,_,y,v;return[e("div",ee,[e("span",{class:E(t(a==null?void 0:a.node)),style:A({color:l(a==null?void 0:a.node)})},null,6),e("span",te,f((c=a==null?void 0:a.node)==null?void 0:c.label),1),(_=a==null?void 0:a.node)!=null&&_.tag?(h(),p("span",{key:0,class:E(["node-tag",n((y=a==null?void 0:a.node)==null?void 0:y.tag)])},f((v=a==null?void 0:a.node)==null?void 0:v.tag),3)):P("",!0)])]}),_:1},8,["data"])])}}},ae=g(de,[["__scopeId","data-v-a78e1880"]]),le={class:"tree-demo"},se={class:"demo-row"},ie={class:"demo-row"},ne={__name:"expand-control",setup(m){const o=b([{id:"1",label:"一级节点 1",children:[{id:"1-1",label:"二级节点 1-1",children:[{id:"1-1-1",label:"三级节点 1-1-1"},{id:"1-1-2",label:"三级节点 1-1-2"}]},{id:"1-2",label:"二级节点 1-2"}]},{id:"2",label:"一级节点 2",children:[{id:"2-1",label:"二级节点 2-1"},{id:"2-2",label:"二级节点 2-2"}]}]);return(t,l)=>{const n=u("t-tree");return h(),p("div",le,[e("div",se,[l[0]||(l[0]=e("div",{class:"label"},"点击节点展开/折叠:",-1)),r(n,{data:o.value,"expand-on-click-node":!0},null,8,["data"])]),e("div",ie,[l[1]||(l[1]=e("div",{class:"label"},"仅点击箭头展开/折叠:",-1)),r(n,{data:o.value,"expand-on-click-node":!1},null,8,["data"])]),l[2]||(l[2]=e("div",{class:"description"},[e("p",null,[s("通过设置 "),e("code",null,"expand-on-click-node"),s(" 属性可以控制节点的展开/折叠方式：")]),e("ul",null,[e("li",null,[e("code",null,"true"),s(": 点击节点时展开/折叠（默认行为）")]),e("li",null,[e("code",null,"false"),s(": 只能通过点击箭头图标展开/折叠")])])],-1))])}}},oe=g(ne,[["__scopeId","data-v-e438fb52"]]),he=JSON.parse('{"title":"树形控件","description":"","frontmatter":{},"headers":[],"relativePath":"components/tree.md","filePath":"components/tree.md"}'),re={name:"components/tree.md"},pe=B({...re,setup(m){return(o,t)=>{const l=u("demo");return h(),p("div",null,[t[0]||(t[0]=x('<h1 id="树形控件" tabindex="-1">树形控件 <a class="header-anchor" href="#树形控件" aria-label="Permalink to &quot;树形控件&quot;">​</a></h1><p><img src="'+q+'" alt="树形控件"></p><p>树形控件用于展示具有层级结构的数据，支持选择、展开/折叠等交互操作，适用于文件夹、组织架构、分类管理等场景。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>基础的树形控件用法，展示层级结构的数据。</p>',5)),r(l,{component:j,name:"tree",examples:"basic"}),t[1]||(t[1]=e("h2",{id:"可选择的树形控件",tabindex:"-1"},[s("可选择的树形控件 "),e("a",{class:"header-anchor",href:"#可选择的树形控件","aria-label":'Permalink to "可选择的树形控件"'},"​")],-1)),t[2]||(t[2]=e("p",null,[s("设置 "),e("code",null,"checkable"),s(" 属性为 "),e("code",null,"true"),s(" 可以显示复选框，实现节点的选择功能。")],-1)),r(l,{component:M,name:"tree",examples:"checkable"}),t[3]||(t[3]=e("h2",{id:"默认展开和选中",tabindex:"-1"},[s("默认展开和选中 "),e("a",{class:"header-anchor",href:"#默认展开和选中","aria-label":'Permalink to "默认展开和选中"'},"​")],-1)),t[4]||(t[4]=e("p",null,[s("通过 "),e("code",null,"expanded"),s(" 和 "),e("code",null,"checked"),s(" 属性可以设置默认展开和选中的节点。")],-1)),r(l,{component:z,name:"tree",examples:"default-state"}),t[5]||(t[5]=e("h2",{id:"手风琴模式",tabindex:"-1"},[s("手风琴模式 "),e("a",{class:"header-anchor",href:"#手风琴模式","aria-label":'Permalink to "手风琴模式"'},"​")],-1)),t[6]||(t[6]=e("p",null,[s("设置 "),e("code",null,"accordion"),s(" 属性为 "),e("code",null,"true"),s(" 可以实现手风琴模式，同级节点只能展开一个。")],-1)),r(l,{component:G,name:"tree",examples:"accordion"}),t[7]||(t[7]=e("h2",{id:"禁用状态",tabindex:"-1"},[s("禁用状态 "),e("a",{class:"header-anchor",href:"#禁用状态","aria-label":'Permalink to "禁用状态"'},"​")],-1)),t[8]||(t[8]=e("p",null,[s("设置 "),e("code",null,"disabled"),s(" 属性可以禁用整棵树，也可以通过在数据中设置 "),e("code",null,"disabled"),s(" 字段来禁用特定节点。")],-1)),r(l,{component:Z,name:"tree",examples:"disabled"}),t[9]||(t[9]=e("h2",{id:"自定义节点内容",tabindex:"-1"},[s("自定义节点内容 "),e("a",{class:"header-anchor",href:"#自定义节点内容","aria-label":'Permalink to "自定义节点内容"'},"​")],-1)),t[10]||(t[10]=e("p",null,"通过默认插槽可以自定义节点的内容和样式。",-1)),r(l,{component:ae,name:"tree",examples:"custom-node"}),t[11]||(t[11]=e("h2",{id:"控制节点展开方式",tabindex:"-1"},[s("控制节点展开方式 "),e("a",{class:"header-anchor",href:"#控制节点展开方式","aria-label":'Permalink to "控制节点展开方式"'},"​")],-1)),t[12]||(t[12]=e("p",null,[s("通过设置 "),e("code",null,"expand-on-click-node"),s(" 属性可以控制是否在点击节点时展开/折叠节点。")],-1)),r(l,{component:oe,name:"tree",examples:"expand-control"}),t[13]||(t[13]=x(`<h2 id="树形控件-api" tabindex="-1">树形控件 API <a class="header-anchor" href="#树形控件-api" aria-label="Permalink to &quot;树形控件 API&quot;">​</a></h2><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td><code>data</code></td><td>显示的数据</td><td><code>array</code></td><td>—</td><td><code>[]</code></td></tr><tr><td><code>node-key</code></td><td>每个树节点用来作为唯一标识的属性</td><td><code>string</code></td><td>—</td><td><code>id</code></td></tr><tr><td><code>label</code></td><td>指定节点标签为节点对象的某个属性值</td><td><code>string</code></td><td>—</td><td><code>label</code></td></tr><tr><td><code>children</code></td><td>指定子树为节点对象的某个属性值</td><td><code>string</code></td><td>—</td><td><code>children</code></td></tr><tr><td><code>expanded</code></td><td>默认展开的节点的 key 的数组</td><td><code>array</code></td><td>—</td><td><code>[]</code></td></tr><tr><td><code>checked</code></td><td>默认勾选的节点的 key 的数组</td><td><code>array</code></td><td>—</td><td><code>[]</code></td></tr><tr><td><code>indent</code></td><td>相邻级节点间的水平缩进，单位为像素</td><td><code>number</code></td><td>—</td><td><code>16</code></td></tr><tr><td><code>checkable</code></td><td>节点是否可被勾选</td><td><code>boolean</code></td><td>—</td><td><code>false</code></td></tr><tr><td><code>accordion</code></td><td>是否每次只打开一个同级树节点</td><td><code>boolean</code></td><td>—</td><td><code>false</code></td></tr><tr><td><code>expand-on-click-node</code></td><td>是否在点击节点的时候展开或者收缩节点</td><td><code>boolean</code></td><td>—</td><td><code>true</code></td></tr><tr><td><code>disabled</code></td><td>是否禁用整棵树</td><td><code>boolean</code></td><td>—</td><td><code>false</code></td></tr></tbody></table><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td><code>node-expand</code></td><td>节点被展开时触发</td><td><code>(nodeData, node)</code></td></tr><tr><td><code>node-collapse</code></td><td>节点被收起时触发</td><td><code>(nodeData, node)</code></td></tr><tr><td><code>check-change</code></td><td>节点选中状态发生变化时触发</td><td><code>(checkedKeys: string[])</code></td></tr></tbody></table><h3 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h3><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td><code>expandByKey</code></td><td>通过 key 展开指定的节点</td><td><code>(key: string, deep: boolean = true)</code></td></tr><tr><td><code>collapseByKey</code></td><td>通过 key 收起指定的节点</td><td><code>(key: string, deep: boolean = true)</code></td></tr><tr><td><code>getCheckedNodes</code></td><td>获取当前选中的节点数据</td><td>—</td></tr></tbody></table><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><table><thead><tr><th>插槽名</th><th>说明</th><th>作用域参数</th></tr></thead><tbody><tr><td><code>default</code></td><td>自定义树节点的内容</td><td><code>{ node: TreeNodeType, data: object }</code></td></tr><tr><td><code>empty</code></td><td>自定义树为空时的内容</td><td>—</td></tr></tbody></table><h3 id="数据结构" tabindex="-1">数据结构 <a class="header-anchor" href="#数据结构" aria-label="Permalink to &quot;数据结构&quot;">​</a></h3><p>每个节点对象应包含以下字段：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NodeData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nodeKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 唯一标识，默认为id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">label</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 节点显示的文本，默认为label</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">children</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NodeData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子节点，默认为children</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  disabled</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 是否禁用节点</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="样式变量" tabindex="-1">样式变量 <a class="header-anchor" href="#样式变量" aria-label="Permalink to &quot;样式变量&quot;">​</a></h3><p>树形控件使用了以下样式变量，可通过 SCSS 变量进行自定义：</p><table><thead><tr><th>变量名</th><th>说明</th></tr></thead><tbody><tr><td>$font-size-default</td><td>默认字体大小</td></tr><tr><td>$text-color-default</td><td>默认文本颜色</td></tr><tr><td>$border-color-default</td><td>默认边框颜色</td></tr><tr><td>$bg-color-default</td><td>默认背景颜色</td></tr><tr><td>$bg-color-hover</td><td>悬停背景颜色</td></tr><tr><td>$theme-color-primary</td><td>主题色-主要</td></tr></tbody></table>`,15))])}}});export{he as __pageData,pe as default};
