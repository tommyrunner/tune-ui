import{_ as m,h,C as p,o as r,c as i,H as d,m as e,t as v,F as V,D as y,d as I,S as _,a as l,au as D}from"./chunks/framework.Nq6kOwAg.js";const P={class:"input-demo"},S={class:"value-display"},k={__name:"basic",setup(c){const a=h("");return(t,n)=>{const s=p("t-input");return r(),i("div",P,[d(s,{modelValue:a.value,"onUpdate:modelValue":n[0]||(n[0]=o=>a.value=o),placeholder:"Please enter content"},null,8,["modelValue"]),e("div",S,"Current value: "+v(a.value),1)])}}},z=m(k,[["__scopeId","data-v-1ce86dc3"]]),C={},q={class:"input-demo"};function E(c,a){const t=p("t-input");return r(),i("div",q,[d(t,{placeholder:"Normal state"}),d(t,{disabled:"",placeholder:"Disabled state"})])}const B=m(C,[["render",E],["__scopeId","data-v-b6df56a5"]]),T={class:"input-demo"},L={__name:"password",setup(c){const a=h("");return(t,n)=>{const s=p("t-input");return r(),i("div",T,[d(s,{modelValue:a.value,"onUpdate:modelValue":n[0]||(n[0]=o=>a.value=o),password:"",placeholder:"Please enter password"},null,8,["modelValue"])])}}},N=m(L,[["__scopeId","data-v-ce5a8b3c"]]),U={class:"input-demo"},A={class:"input-row"},F={class:"input-row"},M={__name:"clearable",setup(c){const a=h("");return(t,n)=>{const s=p("t-input");return r(),i("div",U,[e("div",A,[n[2]||(n[2]=e("span",{class:"label"},"Default with clear button:",-1)),d(s,{modelValue:a.value,"onUpdate:modelValue":n[0]||(n[0]=o=>a.value=o),placeholder:"Clear button appears after input"},null,8,["modelValue"])]),e("div",F,[n[3]||(n[3]=e("span",{class:"label"},"Disable clear button:",-1)),d(s,{modelValue:a.value,"onUpdate:modelValue":n[1]||(n[1]=o=>a.value=o),clearable:!1,placeholder:"Clear button disabled"},null,8,["modelValue"])])])}}},W=m(M,[["__scopeId","data-v-e61b6ed8"]]),H={},J={class:"input-demo"},O={class:"input-row"},j={class:"input-row"},G={class:"input-row"};function K(c,a){const t=p("t-input");return r(),i("div",J,[e("div",O,[a[0]||(a[0]=e("span",{class:"label"},"Small input:",-1)),d(t,{size:"small",placeholder:"small"})]),e("div",j,[a[1]||(a[1]=e("span",{class:"label"},"Default input:",-1)),d(t,{placeholder:"default"})]),e("div",G,[a[2]||(a[2]=e("span",{class:"label"},"Large input:",-1)),d(t,{size:"large",placeholder:"large"})])])}const Q=m(H,[["render",K],["__scopeId","data-v-72f75d7d"]]),R={class:"input-demo"},X={class:"value-display"},Y={__name:"maxlength",setup(c){const a=h("");return(t,n)=>{const s=p("t-input");return r(),i("div",R,[d(s,{modelValue:a.value,"onUpdate:modelValue":n[0]||(n[0]=o=>a.value=o),maxLength:10,placeholder:"Maximum 10 characters"},null,8,["modelValue"]),e("div",X,"Current length: "+v(a.value.length)+"/10",1)])}}},Z=m(Y,[["__scopeId","data-v-f15b6fcd"]]),tt={class:"input-demo"},et={class:"event-log"},at={__name:"events",setup(c){const a=h(""),t=h([]),n=u=>{t.value.unshift(`Focus: ${u}`)},s=u=>{t.value.unshift(`Blur: ${u}`)},o=u=>{t.value.unshift(`Enter pressed: ${u}`)},g=u=>{t.value.unshift(`Input value: ${u}`),t.value.length>5&&t.value.pop()},x=()=>{t.value.unshift("Content cleared")};return(u,b)=>{const w=p("t-input");return r(),i("div",tt,[d(w,{modelValue:a.value,"onUpdate:modelValue":b[0]||(b[0]=f=>a.value=f),clearable:"",placeholder:"Try typing, clearing and pressing Enter",onFocus:n,onBlur:s,onEnter:o,onInput:g,onClear:x},null,8,["modelValue"]),e("div",et,[b[1]||(b[1]=e("div",{class:"event-title"},"Event Log:",-1)),(r(!0),i(V,null,y(t.value,(f,$)=>(r(),i("div",{key:$,class:"event-item"},v(f),1))),128))])])}}},nt=m(at,[["__scopeId","data-v-13f5d98f"]]),ot=JSON.parse('{"title":"Input Component","description":"","frontmatter":{},"headers":[],"relativePath":"en/components/input.md","filePath":"en/components/input.md"}'),dt={name:"en/components/input.md"},st=I({...dt,setup(c){return(a,t)=>{const n=p("demo");return r(),i("div",null,[t[0]||(t[0]=_('<h1 id="input-component" tabindex="-1">Input Component <a class="header-anchor" href="#input-component" aria-label="Permalink to &quot;Input Component&quot;">​</a></h1><p><img src="'+D+'" alt="Input Component"></p><p>Input is a basic form control for users to enter data, supporting various types of input.</p><h2 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-label="Permalink to &quot;Basic Usage&quot;">​</a></h2><p>Basic input for entering single-line text.</p>',5)),d(n,{component:z,name:"input",examples:"basic"}),t[1]||(t[1]=e("h2",{id:"disabled-state",tabindex:"-1"},[l("Disabled State "),e("a",{class:"header-anchor",href:"#disabled-state","aria-label":'Permalink to "Disabled State"'},"​")],-1)),t[2]||(t[2]=e("p",null,[l("Set the "),e("code",null,"disabled"),l(" attribute to disable the input.")],-1)),d(n,{component:B,name:"input",examples:"disabled"}),t[3]||(t[3]=e("h2",{id:"password-input",tabindex:"-1"},[l("Password Input "),e("a",{class:"header-anchor",href:"#password-input","aria-label":'Permalink to "Password Input"'},"​")],-1)),t[4]||(t[4]=e("p",null,[l("Set the "),e("code",null,"password"),l(" attribute to create a password input with show/hide password toggle.")],-1)),d(n,{component:N,name:"input",examples:"password"}),t[5]||(t[5]=e("h2",{id:"clearable-input",tabindex:"-1"},[l("Clearable Input "),e("a",{class:"header-anchor",href:"#clearable-input","aria-label":'Permalink to "Clearable Input"'},"​")],-1)),t[6]||(t[6]=e("p",null,[l("By default, inputs with "),e("code",null,"v-model"),l(" will show a clear icon after entering content, which can be clicked to clear the content.")],-1)),d(n,{component:W,name:"input",examples:"clearable"}),t[7]||(t[7]=e("h2",{id:"different-sizes",tabindex:"-1"},[l("Different Sizes "),e("a",{class:"header-anchor",href:"#different-sizes","aria-label":'Permalink to "Different Sizes"'},"​")],-1)),t[8]||(t[8]=e("p",null,"Input supports three sizes: small, default, and large.",-1)),d(n,{component:Q,name:"input",examples:"size"}),t[9]||(t[9]=e("h2",{id:"maximum-input-length",tabindex:"-1"},[l("Maximum Input Length "),e("a",{class:"header-anchor",href:"#maximum-input-length","aria-label":'Permalink to "Maximum Input Length"'},"​")],-1)),t[10]||(t[10]=e("p",null,[l("Set the "),e("code",null,"maxLength"),l(" attribute to limit the maximum input length.")],-1)),d(n,{component:Z,name:"input",examples:"maxlength"}),t[11]||(t[11]=e("h2",{id:"event-handling",tabindex:"-1"},[l("Event Handling "),e("a",{class:"header-anchor",href:"#event-handling","aria-label":'Permalink to "Event Handling"'},"​")],-1)),t[12]||(t[12]=e("p",null,"Input provides multiple events: focus, blur, enter, input, clear.",-1)),d(n,{component:nt,name:"input",examples:"events"}),t[13]||(t[13]=_('<h2 id="input-api" tabindex="-1">Input API <a class="header-anchor" href="#input-api" aria-label="Permalink to &quot;Input API&quot;">​</a></h2><h3 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>v-model</td><td>Binding value</td><td>string</td><td>—</td><td>—</td></tr><tr><td>size</td><td>Size</td><td>string</td><td>small / default / large</td><td>default</td></tr><tr><td>placeholder</td><td>Placeholder text</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>Whether disabled</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>clearable</td><td>Whether clearable</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>password</td><td>Whether password input</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>maxLength</td><td>Maximum input length</td><td>number</td><td>—</td><td>—</td></tr><tr><td>debounce</td><td>Debounce callback</td><td>(value: string) =&gt; void</td><td>—</td><td>—</td></tr><tr><td>debounceDelay</td><td>Debounce delay (ms)</td><td>number</td><td>—</td><td>1000</td></tr><tr><td>autocomplete</td><td>Autocomplete</td><td>string</td><td>on / off</td><td>off</td></tr><tr><td>isTip</td><td>Whether show tip</td><td>boolean</td><td>—</td><td>true</td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table><thead><tr><th>Event Name</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>focus</td><td>Triggered when input is focused</td><td>(value: <code>string</code>)</td></tr><tr><td>blur</td><td>Triggered when input loses focus</td><td>(value: <code>string</code>)</td></tr><tr><td>enter</td><td>Triggered when Enter key is pressed</td><td>(value: <code>string</code>)</td></tr><tr><td>input</td><td>Triggered when input value changes</td><td>(value: <code>string</code>)</td></tr><tr><td>clear</td><td>Triggered when clear button is clicked</td><td>—</td></tr></tbody></table><h3 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h3><table><thead><tr><th>Slot Name</th><th>Description</th></tr></thead><tbody><tr><td>prefix</td><td>Input prefix content</td></tr><tr><td>default</td><td>Input default content</td></tr></tbody></table><h3 id="style-variables" tabindex="-1">Style Variables <a class="header-anchor" href="#style-variables" aria-label="Permalink to &quot;Style Variables&quot;">​</a></h3><p>The input component uses the following style variables, which can be customized through SCSS variables:</p><table><thead><tr><th>Variable Name</th><th>Description</th></tr></thead><tbody><tr><td>$theme-color-primary</td><td>Theme color - Primary</td></tr><tr><td>$text-color-default</td><td>Default text color</td></tr><tr><td>$border-color-default</td><td>Default border color</td></tr><tr><td>$bg-color-default</td><td>Default background color</td></tr><tr><td>$opacity-disabled</td><td>Disabled state opacity</td></tr><tr><td>$font-size-small</td><td>Small font size</td></tr><tr><td>$font-size-default</td><td>Default font size</td></tr><tr><td>$font-size-large</td><td>Large font size</td></tr></tbody></table>',10))])}}});export{ot as __pageData,st as default};
