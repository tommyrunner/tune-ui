import{_ as p,C as n,o,c as f,m as s,H as l,w as e,S as m,d as x,a as i,ao as u}from"./chunks/framework.Nq6kOwAg.js";const v={},_={class:"demo-container"},b={class:"demo-block"};function g(r,t){const d=n("t-flex"),a=n("t-flex-group");return o(),f("div",_,[t[2]||(t[2]=s("p",{class:"demo-desc"},"使用 t-flex 和 t-flex-group 组件创建简单的弹性布局。",-1)),s("div",b,[l(a,null,{default:e(()=>[l(d,{span:5},{default:e(()=>t[0]||(t[0]=[s("div",{class:"flex-item"},"span: 5 (50%)",-1)])),_:1,__:[0]}),l(d,{span:5},{default:e(()=>t[1]||(t[1]=[s("div",{class:"flex-item"},"span: 5 (50%)",-1)])),_:1,__:[1]})]),_:1})])])}const k=p(v,[["render",g],["__scopeId","data-v-3abb622c"]]),$={},y={class:"demo-container"},P={class:"demo-block"},F={class:"demo-block"},q={class:"demo-block"};function S(r,t){const d=n("t-flex"),a=n("t-flex-group");return o(),f("div",y,[t[10]||(t[10]=s("p",{class:"demo-desc"},"通过 span 和 offset 属性创建栅格布局，总栅格数为10。",-1)),s("div",P,[l(a,null,{default:e(()=>[l(d,{span:3},{default:e(()=>t[0]||(t[0]=[s("div",{class:"flex-item"},"span: 3 (30%)",-1)])),_:1,__:[0]}),l(d,{span:4,offset:1},{default:e(()=>t[1]||(t[1]=[s("div",{class:"flex-item"},"span: 4, offset: 1",-1)])),_:1,__:[1]}),l(d,{span:2},{default:e(()=>t[2]||(t[2]=[s("div",{class:"flex-item"},"span: 2 (20%)",-1)])),_:1,__:[2]})]),_:1})]),s("div",F,[l(a,null,{default:e(()=>[l(d,{span:6},{default:e(()=>t[3]||(t[3]=[s("div",{class:"flex-item"},"span: 6 (60%)",-1)])),_:1,__:[3]}),l(d,{span:4},{default:e(()=>t[4]||(t[4]=[s("div",{class:"flex-item"},"span: 4 (40%)",-1)])),_:1,__:[4]})]),_:1})]),s("div",q,[l(a,null,{default:e(()=>[l(d,{span:2},{default:e(()=>t[5]||(t[5]=[s("div",{class:"flex-item"},"span: 2",-1)])),_:1,__:[5]}),l(d,{span:2},{default:e(()=>t[6]||(t[6]=[s("div",{class:"flex-item"},"span: 2",-1)])),_:1,__:[6]}),l(d,{span:2},{default:e(()=>t[7]||(t[7]=[s("div",{class:"flex-item"},"span: 2",-1)])),_:1,__:[7]}),l(d,{span:2},{default:e(()=>t[8]||(t[8]=[s("div",{class:"flex-item"},"span: 2",-1)])),_:1,__:[8]}),l(d,{span:2},{default:e(()=>t[9]||(t[9]=[s("div",{class:"flex-item"},"span: 2",-1)])),_:1,__:[9]})]),_:1})])])}const j=p($,[["render",S],["__scopeId","data-v-e85c20ae"]]),I={},G={class:"demo-container"},w={class:"demo-block"};function C(r,t){const d=n("t-flex"),a=n("t-flex-group");return o(),f("div",G,[t[3]||(t[3]=s("p",{class:"demo-desc"},"使用 sort 属性控制元素的显示顺序。",-1)),s("div",w,[l(a,null,{default:e(()=>[l(d,{span:3,sort:3},{default:e(()=>t[0]||(t[0]=[s("div",{class:"flex-item"},"sort: 3",-1)])),_:1,__:[0]}),l(d,{span:3,sort:1},{default:e(()=>t[1]||(t[1]=[s("div",{class:"flex-item"},"sort: 1",-1)])),_:1,__:[1]}),l(d,{span:3,sort:2},{default:e(()=>t[2]||(t[2]=[s("div",{class:"flex-item"},"sort: 2",-1)])),_:1,__:[2]})]),_:1})]),t[4]||(t[4]=s("div",{class:"demo-note"}," 显示顺序: 1 → 2 → 3（无论在代码中的位置如何） ",-1))])}const N=p(I,[["render",C],["__scopeId","data-v-f3d630ab"]]),B={},L={class:"demo-container"},M={class:"demo-section"},V={class:"demo-item"},X={class:"demo-item"},A={class:"demo-item"},D={class:"demo-item"},E={class:"demo-item"},H={class:"demo-section"},J={class:"demo-item"},O={class:"demo-item"},R={class:"demo-item"};function T(r,t){const d=n("t-flex"),a=n("t-flex-group");return o(),f("div",L,[t[32]||(t[32]=s("p",{class:"demo-desc"},"通过 justify 和 align 属性设置弹性容器内元素的对齐方式。",-1)),t[33]||(t[33]=s("h4",{class:"section-title"},"水平对齐（justify）",-1)),s("div",M,[s("div",V,[t[3]||(t[3]=s("p",{class:"demo-label"},"start（默认）",-1)),l(a,{justify:"start",class:"demo-flex"},{default:e(()=>[l(d,{span:2},{default:e(()=>t[0]||(t[0]=[s("div",{class:"flex-item"},"1",-1)])),_:1,__:[0]}),l(d,{span:2},{default:e(()=>t[1]||(t[1]=[s("div",{class:"flex-item"},"2",-1)])),_:1,__:[1]}),l(d,{span:2},{default:e(()=>t[2]||(t[2]=[s("div",{class:"flex-item"},"3",-1)])),_:1,__:[2]})]),_:1})]),s("div",X,[t[7]||(t[7]=s("p",{class:"demo-label"},"center",-1)),l(a,{justify:"center",class:"demo-flex"},{default:e(()=>[l(d,{span:2},{default:e(()=>t[4]||(t[4]=[s("div",{class:"flex-item"},"1",-1)])),_:1,__:[4]}),l(d,{span:2},{default:e(()=>t[5]||(t[5]=[s("div",{class:"flex-item"},"2",-1)])),_:1,__:[5]}),l(d,{span:2},{default:e(()=>t[6]||(t[6]=[s("div",{class:"flex-item"},"3",-1)])),_:1,__:[6]})]),_:1})]),s("div",A,[t[11]||(t[11]=s("p",{class:"demo-label"},"end",-1)),l(a,{justify:"end",class:"demo-flex"},{default:e(()=>[l(d,{span:2},{default:e(()=>t[8]||(t[8]=[s("div",{class:"flex-item"},"1",-1)])),_:1,__:[8]}),l(d,{span:2},{default:e(()=>t[9]||(t[9]=[s("div",{class:"flex-item"},"2",-1)])),_:1,__:[9]}),l(d,{span:2},{default:e(()=>t[10]||(t[10]=[s("div",{class:"flex-item"},"3",-1)])),_:1,__:[10]})]),_:1})]),s("div",D,[t[15]||(t[15]=s("p",{class:"demo-label"},"space-between",-1)),l(a,{justify:"space-between",class:"demo-flex"},{default:e(()=>[l(d,{span:2},{default:e(()=>t[12]||(t[12]=[s("div",{class:"flex-item"},"1",-1)])),_:1,__:[12]}),l(d,{span:2},{default:e(()=>t[13]||(t[13]=[s("div",{class:"flex-item"},"2",-1)])),_:1,__:[13]}),l(d,{span:2},{default:e(()=>t[14]||(t[14]=[s("div",{class:"flex-item"},"3",-1)])),_:1,__:[14]})]),_:1})]),s("div",E,[t[19]||(t[19]=s("p",{class:"demo-label"},"space-around",-1)),l(a,{justify:"space-around",class:"demo-flex"},{default:e(()=>[l(d,{span:2},{default:e(()=>t[16]||(t[16]=[s("div",{class:"flex-item"},"1",-1)])),_:1,__:[16]}),l(d,{span:2},{default:e(()=>t[17]||(t[17]=[s("div",{class:"flex-item"},"2",-1)])),_:1,__:[17]}),l(d,{span:2},{default:e(()=>t[18]||(t[18]=[s("div",{class:"flex-item"},"3",-1)])),_:1,__:[18]})]),_:1})])]),t[34]||(t[34]=s("h4",{class:"section-title"},"垂直对齐（align）",-1)),s("div",H,[s("div",J,[t[23]||(t[23]=s("p",{class:"demo-label"},"center（默认）",-1)),l(a,{align:"center",class:"demo-flex demo-flex-height"},{default:e(()=>[l(d,{span:2},{default:e(()=>t[20]||(t[20]=[s("div",{class:"flex-item"},"1",-1)])),_:1,__:[20]}),l(d,{span:2},{default:e(()=>t[21]||(t[21]=[s("div",{class:"flex-item height-60"},"2",-1)])),_:1,__:[21]}),l(d,{span:2},{default:e(()=>t[22]||(t[22]=[s("div",{class:"flex-item"},"3",-1)])),_:1,__:[22]})]),_:1})]),s("div",O,[t[27]||(t[27]=s("p",{class:"demo-label"},"start",-1)),l(a,{align:"start",class:"demo-flex demo-flex-height"},{default:e(()=>[l(d,{span:2},{default:e(()=>t[24]||(t[24]=[s("div",{class:"flex-item"},"1",-1)])),_:1,__:[24]}),l(d,{span:2},{default:e(()=>t[25]||(t[25]=[s("div",{class:"flex-item height-60"},"2",-1)])),_:1,__:[25]}),l(d,{span:2},{default:e(()=>t[26]||(t[26]=[s("div",{class:"flex-item"},"3",-1)])),_:1,__:[26]})]),_:1})]),s("div",R,[t[31]||(t[31]=s("p",{class:"demo-label"},"end",-1)),l(a,{align:"end",class:"demo-flex demo-flex-height"},{default:e(()=>[l(d,{span:2},{default:e(()=>t[28]||(t[28]=[s("div",{class:"flex-item"},"1",-1)])),_:1,__:[28]}),l(d,{span:2},{default:e(()=>t[29]||(t[29]=[s("div",{class:"flex-item height-60"},"2",-1)])),_:1,__:[29]}),l(d,{span:2},{default:e(()=>t[30]||(t[30]=[s("div",{class:"flex-item"},"3",-1)])),_:1,__:[30]})]),_:1})])])])}const z=p(B,[["render",T],["__scopeId","data-v-f3bf52d4"]]),K={},Q={class:"demo-container"},U={class:"demo-block"},W={class:"demo-block"},Y={class:"demo-block"},Z={class:"demo-block"};function c(r,t){const d=n("t-flex"),a=n("t-flex-group");return o(),f("div",Q,[t[16]||(t[16]=s("p",{class:"demo-desc"},"使用 gap 属性设置元素之间的间距。",-1)),s("div",U,[t[3]||(t[3]=s("h4",{class:"section-title"},"无间距（默认）",-1)),l(a,{gap:0},{default:e(()=>[l(d,{span:3},{default:e(()=>t[0]||(t[0]=[s("div",{class:"flex-item"},"gap: 0",-1)])),_:1,__:[0]}),l(d,{span:3},{default:e(()=>t[1]||(t[1]=[s("div",{class:"flex-item"},"gap: 0",-1)])),_:1,__:[1]}),l(d,{span:3},{default:e(()=>t[2]||(t[2]=[s("div",{class:"flex-item"},"gap: 0",-1)])),_:1,__:[2]})]),_:1})]),s("div",W,[t[7]||(t[7]=s("h4",{class:"section-title"},"间距 8px",-1)),l(a,{gap:8},{default:e(()=>[l(d,{span:3},{default:e(()=>t[4]||(t[4]=[s("div",{class:"flex-item"},"gap: 8",-1)])),_:1,__:[4]}),l(d,{span:3},{default:e(()=>t[5]||(t[5]=[s("div",{class:"flex-item"},"gap: 8",-1)])),_:1,__:[5]}),l(d,{span:3},{default:e(()=>t[6]||(t[6]=[s("div",{class:"flex-item"},"gap: 8",-1)])),_:1,__:[6]})]),_:1})]),s("div",Y,[t[11]||(t[11]=s("h4",{class:"section-title"},"间距 16px",-1)),l(a,{gap:16},{default:e(()=>[l(d,{span:3},{default:e(()=>t[8]||(t[8]=[s("div",{class:"flex-item"},"gap: 16",-1)])),_:1,__:[8]}),l(d,{span:3},{default:e(()=>t[9]||(t[9]=[s("div",{class:"flex-item"},"gap: 16",-1)])),_:1,__:[9]}),l(d,{span:3},{default:e(()=>t[10]||(t[10]=[s("div",{class:"flex-item"},"gap: 16",-1)])),_:1,__:[10]})]),_:1})]),s("div",Z,[t[15]||(t[15]=s("h4",{class:"section-title"},"间距 24px",-1)),l(a,{gap:24},{default:e(()=>[l(d,{span:3},{default:e(()=>t[12]||(t[12]=[s("div",{class:"flex-item"},"gap: 24",-1)])),_:1,__:[12]}),l(d,{span:3},{default:e(()=>t[13]||(t[13]=[s("div",{class:"flex-item"},"gap: 24",-1)])),_:1,__:[13]}),l(d,{span:3},{default:e(()=>t[14]||(t[14]=[s("div",{class:"flex-item"},"gap: 24",-1)])),_:1,__:[14]})]),_:1})])])}const h=p(K,[["render",c],["__scopeId","data-v-188b6973"]]),tt={},st={class:"demo-container"},dt={class:"demo-block"};function lt(r,t){const d=n("t-flex"),a=n("t-flex-group");return o(),f("div",st,[t[5]||(t[5]=s("p",{class:"demo-desc"},"Flex组件支持响应式布局，可以根据不同屏幕尺寸自动调整布局。",-1)),s("div",dt,[t[4]||(t[4]=m('<div class="demo-title" data-v-43e0a9ba>响应式变化（请调整浏览器窗口查看效果）</div><div class="breakpoint-info" data-v-43e0a9ba><div class="breakpoint-item" data-v-43e0a9ba><div class="breakpoint" data-v-43e0a9ba>XS</div><div class="breakpoint-desc" data-v-43e0a9ba>&lt;768px</div></div><div class="breakpoint-item" data-v-43e0a9ba><div class="breakpoint" data-v-43e0a9ba>SM</div><div class="breakpoint-desc" data-v-43e0a9ba>≥768px</div></div><div class="breakpoint-item" data-v-43e0a9ba><div class="breakpoint" data-v-43e0a9ba>MD</div><div class="breakpoint-desc" data-v-43e0a9ba>≥992px</div></div><div class="breakpoint-item" data-v-43e0a9ba><div class="breakpoint" data-v-43e0a9ba>LG</div><div class="breakpoint-desc" data-v-43e0a9ba>≥1200px</div></div><div class="breakpoint-item" data-v-43e0a9ba><div class="breakpoint" data-v-43e0a9ba>XL</div><div class="breakpoint-desc" data-v-43e0a9ba>≥1920px</div></div></div>',2)),l(a,{gap:16},{default:e(()=>[l(d,{xs:10,sm:5,md:3,lg:2,xl:1},{default:e(()=>t[0]||(t[0]=[s("div",{class:"flex-item"},[s("div",{class:"item-title"},"项目 1"),s("div",{class:"responsive-info"},[s("div",null,"xs: 10 列"),s("div",null,"sm: 5 列"),s("div",null,"md: 3 列"),s("div",null,"lg: 2 列"),s("div",null,"xl: 1 列")])],-1)])),_:1,__:[0]}),l(d,{xs:10,sm:5,md:3,lg:2,xl:1},{default:e(()=>t[1]||(t[1]=[s("div",{class:"flex-item"},[s("div",{class:"item-title"},"项目 2"),s("div",{class:"responsive-info"},[s("div",null,"xs: 10 列"),s("div",null,"sm: 5 列"),s("div",null,"md: 3 列"),s("div",null,"lg: 2 列"),s("div",null,"xl: 1 列")])],-1)])),_:1,__:[1]}),l(d,{xs:10,sm:5,md:3,lg:2,xl:1},{default:e(()=>t[2]||(t[2]=[s("div",{class:"flex-item"},[s("div",{class:"item-title"},"项目 3"),s("div",{class:"responsive-info"},[s("div",null,"xs: 10 列"),s("div",null,"sm: 5 列"),s("div",null,"md: 3 列"),s("div",null,"lg: 2 列"),s("div",null,"xl: 1 列")])],-1)])),_:1,__:[2]}),l(d,{xs:10,sm:5,md:3,lg:2,xl:1},{default:e(()=>t[3]||(t[3]=[s("div",{class:"flex-item"},[s("div",{class:"item-title"},"项目 4"),s("div",{class:"responsive-info"},[s("div",null,"xs: 10 列"),s("div",null,"sm: 5 列"),s("div",null,"md: 3 列"),s("div",null,"lg: 2 列"),s("div",null,"xl: 1 列")])],-1)])),_:1,__:[3]})]),_:1})]),t[6]||(t[6]=s("div",{class:"demo-note"},[s("p",null,"屏幕尺寸变化时，每行显示的项目数量将改变："),s("ul",null,[s("li",null,"XS(<768px): 每行1个（10列宽）"),s("li",null,"SM(≥768px): 每行2个（5列宽）"),s("li",null,"MD(≥992px): 每行3-4个（3列宽）"),s("li",null,"LG(≥1200px): 每行5个（2列宽）"),s("li",null,"XL(≥1920px): 每行10个（1列宽）")])],-1))])}const et=p(tt,[["render",lt],["__scopeId","data-v-43e0a9ba"]]),nt=JSON.parse('{"title":"Flex 弹性布局","description":"","frontmatter":{},"headers":[],"relativePath":"components/flex.md","filePath":"components/flex.md"}'),at={name:"components/flex.md"},ot=x({...at,setup(r){return(t,d)=>{const a=n("demo");return o(),f("div",null,[d[0]||(d[0]=m('<h1 id="flex-弹性布局" tabindex="-1">Flex 弹性布局 <a class="header-anchor" href="#flex-弹性布局" aria-label="Permalink to &quot;Flex 弹性布局&quot;">​</a></h1><p><img src="'+u+'" alt="Flex 弹性布局"></p><p>Flex 组件是一个基于 Flexbox 布局模型的容器组件，用于创建灵活、响应式的布局结构。组件提供了10栏栅格系统，支持响应式布局，并且可以控制元素间距、排序和对齐方式。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>使用 <code>t-flex</code> 和 <code>t-flex-group</code> 组件创建简单的弹性布局。</p>',5)),l(a,{component:k,name:"flex",examples:"basic"}),d[1]||(d[1]=s("h2",{id:"栅格配置",tabindex:"-1"},[i("栅格配置 "),s("a",{class:"header-anchor",href:"#栅格配置","aria-label":'Permalink to "栅格配置"'},"​")],-1)),d[2]||(d[2]=s("p",null,[i("通过 "),s("code",null,"span"),i(" 和 "),s("code",null,"offset"),i(" 属性创建栅格布局，总栅格数为10。")],-1)),l(a,{component:j,name:"flex",examples:"grid"}),d[3]||(d[3]=s("h2",{id:"排序",tabindex:"-1"},[i("排序 "),s("a",{class:"header-anchor",href:"#排序","aria-label":'Permalink to "排序"'},"​")],-1)),d[4]||(d[4]=s("p",null,[i("使用 "),s("code",null,"sort"),i(" 属性控制元素的显示顺序。")],-1)),l(a,{component:N,name:"flex",examples:"sort"}),d[5]||(d[5]=s("h2",{id:"对齐方式",tabindex:"-1"},[i("对齐方式 "),s("a",{class:"header-anchor",href:"#对齐方式","aria-label":'Permalink to "对齐方式"'},"​")],-1)),d[6]||(d[6]=s("p",null,[i("通过 "),s("code",null,"justify"),i(" 和 "),s("code",null,"align"),i(" 属性设置弹性容器内元素的对齐方式。")],-1)),l(a,{component:z,name:"flex",examples:"align"}),d[7]||(d[7]=s("h2",{id:"间距设置",tabindex:"-1"},[i("间距设置 "),s("a",{class:"header-anchor",href:"#间距设置","aria-label":'Permalink to "间距设置"'},"​")],-1)),d[8]||(d[8]=s("p",null,[i("使用 "),s("code",null,"gap"),i(" 属性设置元素之间的间距。")],-1)),l(a,{component:h,name:"flex",examples:"gap"}),d[9]||(d[9]=s("h2",{id:"响应式布局",tabindex:"-1"},[i("响应式布局 "),s("a",{class:"header-anchor",href:"#响应式布局","aria-label":'Permalink to "响应式布局"'},"​")],-1)),d[10]||(d[10]=s("p",null,"Flex 组件支持响应式布局，可以根据不同屏幕尺寸自动调整布局。",-1)),l(a,{component:et,name:"flex",examples:"responsive"}),d[11]||(d[11]=m('<h2 id="flex-api" tabindex="-1">Flex API <a class="header-anchor" href="#flex-api" aria-label="Permalink to &quot;Flex API&quot;">​</a></h2><h3 id="flex-属性" tabindex="-1">Flex 属性 <a class="header-anchor" href="#flex-属性" aria-label="Permalink to &quot;Flex 属性&quot;">​</a></h3><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>span</td><td>栅格占据的列数</td><td>number</td><td>0-10</td><td>-</td></tr><tr><td>offset</td><td>栅格左侧的间隔</td><td>number</td><td>0-10</td><td>0</td></tr><tr><td>sort</td><td>元素的排序</td><td>number</td><td>-</td><td>-</td></tr><tr><td>xs</td><td>&lt;768px 响应式栅格数</td><td>number</td><td>0-10</td><td>-</td></tr><tr><td>sm</td><td>≥768px 响应式栅格数</td><td>number</td><td>0-10</td><td>-</td></tr><tr><td>md</td><td>≥992px 响应式栅格数</td><td>number</td><td>0-10</td><td>-</td></tr><tr><td>lg</td><td>≥1200px 响应式栅格数</td><td>number</td><td>0-10</td><td>-</td></tr><tr><td>xl</td><td>≥1920px 响应式栅格数</td><td>number</td><td>0-10</td><td>-</td></tr></tbody></table><h3 id="flexgroup-属性" tabindex="-1">FlexGroup 属性 <a class="header-anchor" href="#flexgroup-属性" aria-label="Permalink to &quot;FlexGroup 属性&quot;">​</a></h3><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>justify</td><td>主轴对齐方式</td><td>string</td><td>start/end/center/space-around/space-between/space-evenly</td><td>start</td></tr><tr><td>align</td><td>交叉轴对齐方式</td><td>string</td><td>start/center/end</td><td>-</td></tr><tr><td>gap</td><td>元素间距(px)</td><td>number</td><td>-</td><td>12</td></tr></tbody></table><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><table><thead><tr><th>插槽名</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>默认插槽，放置子元素</td></tr></tbody></table><h3 id="样式变量" tabindex="-1">样式变量 <a class="header-anchor" href="#样式变量" aria-label="Permalink to &quot;样式变量&quot;">​</a></h3><p>Flex 组件使用了以下样式变量，可通过 SCSS 变量进行自定义：</p><table><thead><tr><th>变量名</th><th>说明</th></tr></thead><tbody><tr><td>$bg-color-default</td><td>默认背景颜色</td></tr><tr><td>$border-color-default</td><td>默认边框颜色</td></tr><tr><td>$text-color-default</td><td>默认文本颜色</td></tr></tbody></table>',10))])}}});export{nt as __pageData,ot as default};
