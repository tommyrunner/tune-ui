import{_ as p,C as _,o as a,c as l,H as r,w as h,m as t,F as c,D as i,t as s,d as y,h as $,S as k,a as n,aH as P}from"./chunks/framework.MEhA6lwx.js";const q={},S={class:"example-container"},g={class:"scrollbar-content"};function z(b,d){const e=_("t-scrollbar");return a(),l("div",S,[r(e,null,{default:h(()=>[t("div",g,[(a(),l(c,null,i(20,o=>t("p",{key:o,class:"scrollbar-item"},s(o)+". 滚动内容示例 - 这是一段示例文本，用于展示滚动条的基础用法。 ",1)),64))])]),_:1})])}const H=p(q,[["render",z],["__scopeId","data-v-02e1cad7"]]),I={},T={class:"example-container"},w={class:"scrollbar-content"};function C(b,d){const e=_("t-scrollbar");return a(),l("div",T,[r(e,{permanent:!0},{default:h(()=>[t("div",w,[(a(),l(c,null,i(20,o=>t("p",{key:o,class:"scrollbar-item"},s(o)+". 常驻滚动条示例 - 设置permanent属性为true可以让滚动条常驻显示。 ",1)),64))])]),_:1})])}const E=p(I,[["render",C],["__scopeId","data-v-1909a179"]]),L={},N={class:"example-container"},B={class:"scrollbar-horizontal-content"},V={class:"month-wrapper"},D={class:"month-title"},M={class:"days-grid"};function X(b,d){const e=_("t-scrollbar");return a(),l("div",N,[r(e,null,{default:h(()=>[t("div",B,[t("div",V,[(a(),l(c,null,i(12,o=>t("div",{key:o,class:"month-item"},[t("div",D,s(o)+"月",1),t("div",M,[(a(),l(c,null,i(30,u=>t("div",{key:u,class:"day-cell"},s(u),1)),64))])])),64))])])]),_:1})])}const Y=p(L,[["render",X],["__scopeId","data-v-254fad80"]]),A={class:"example-container"},F={class:"scrollbar-section"},O={class:"scrollbar-content vertical"},J={class:"event-info"},j={class:"scrollbar-section"},G={class:"scrollbar-content horizontal"},K={class:"horizontal-wrapper"},Q={class:"event-info"},R=y({__name:"events",setup(b){const d=$(0),e=$(0),o=f=>{d.value=f.scrollTop},u=f=>{e.value=f.scrollLeft};return(f,v)=>{const x=_("t-scrollbar");return a(),l("div",A,[t("div",F,[v[0]||(v[0]=t("h4",null,"垂直滚动事件",-1)),r(x,{onScrollY:o},{default:h(()=>[t("div",O,[(a(),l(c,null,i(20,m=>t("p",{key:m,class:"scrollbar-item"},s(m)+". 垂直滚动示例",1)),64))])]),_:1}),t("div",J,"垂直滚动位置: "+s(d.value)+"px",1)]),t("div",j,[v[1]||(v[1]=t("h4",null,"水平滚动事件",-1)),r(x,{onScrollX:u},{default:h(()=>[t("div",G,[t("div",K,[(a(),l(c,null,i(20,m=>t("div",{key:m,class:"horizontal-item"},s(m)+". 水平滚动示例",1)),64))])])]),_:1}),t("div",Q,"水平滚动位置: "+s(e.value)+"px",1)])])}}}),U=p(R,[["__scopeId","data-v-0ffd151f"]]),W={},Z={class:"example-container"},tt={class:"scrollbar-row"},et={class:"scrollbar-column"},ot={class:"scrollbar-content"},at={class:"scrollbar-column"},lt={class:"scrollbar-content"};function rt(b,d){const e=_("t-scrollbar");return a(),l("div",Z,[t("div",tt,[t("div",et,[d[0]||(d[0]=t("h4",null,"高度: 200px",-1)),r(e,{height:200},{default:h(()=>[t("div",ot,[(a(),l(c,null,i(20,o=>t("p",{key:o,class:"scrollbar-item"},s(o)+". 自定义高度示例",1)),64))])]),_:1})]),t("div",at,[d[1]||(d[1]=t("h4",null,"高度: 400px",-1)),r(e,{height:400},{default:h(()=>[t("div",lt,[(a(),l(c,null,i(20,o=>t("p",{key:o,class:"scrollbar-item"},s(o)+". 自定义高度示例",1)),64))])]),_:1})])])])}const dt=p(W,[["render",rt],["__scopeId","data-v-e0032a91"]]),ct=JSON.parse('{"title":"滚动条组件","description":"","frontmatter":{},"headers":[],"relativePath":"components/scrollbar.md","filePath":"components/scrollbar.md"}'),st={name:"components/scrollbar.md"},it=y({...st,setup(b){return(d,e)=>{const o=_("demo");return a(),l("div",null,[e[0]||(e[0]=k('<h1 id="滚动条组件" tabindex="-1">滚动条组件 <a class="header-anchor" href="#滚动条组件" aria-label="Permalink to &quot;滚动条组件&quot;">​</a></h1><p><img src="'+P+'" alt="滚动条组件"></p><p>滚动条组件提供了一个自定义样式的滚动条容器，用于替代浏览器原生滚动条，支持垂直和水平滚动，可自定义样式和行为。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>最基本的用法是创建一个具有固定高度的滚动容器，当内容超出容器高度时，会自动显示滚动条。</p>',5)),r(o,{component:H,name:"scrollbar",examples:"basic"}),e[1]||(e[1]=t("h2",{id:"常驻滚动条",tabindex:"-1"},[n("常驻滚动条 "),t("a",{class:"header-anchor",href:"#常驻滚动条","aria-label":'Permalink to "常驻滚动条"'},"​")],-1)),e[2]||(e[2]=t("p",null,[n("默认情况下，滚动条仅在悬停时显示，设置"),t("code",null,"permanent"),n("属性为"),t("code",null,"true"),n("可以让滚动条常驻显示。")],-1)),r(o,{component:E,name:"scrollbar",examples:"permanent"}),e[3]||(e[3]=t("h2",{id:"水平滚动",tabindex:"-1"},[n("水平滚动 "),t("a",{class:"header-anchor",href:"#水平滚动","aria-label":'Permalink to "水平滚动"'},"​")],-1)),e[4]||(e[4]=t("p",null,"当内容宽度超出容器宽度时，会自动显示水平滚动条。",-1)),r(o,{component:Y,name:"scrollbar",examples:"horizontal"}),e[5]||(e[5]=t("h2",{id:"滚动事件",tabindex:"-1"},[n("滚动事件 "),t("a",{class:"header-anchor",href:"#滚动事件","aria-label":'Permalink to "滚动事件"'},"​")],-1)),e[6]||(e[6]=t("p",null,"滚动条组件提供了垂直滚动和水平滚动事件，可以实时获取滚动位置。",-1)),r(o,{component:U,name:"scrollbar",examples:"events"}),e[7]||(e[7]=t("h2",{id:"自定义高度",tabindex:"-1"},[n("自定义高度 "),t("a",{class:"header-anchor",href:"#自定义高度","aria-label":'Permalink to "自定义高度"'},"​")],-1)),e[8]||(e[8]=t("p",null,[n("通过"),t("code",null,"height"),n("属性可以指定滚动容器的高度。")],-1)),r(o,{component:dt,name:"scrollbar",examples:"height"}),e[9]||(e[9]=k('<h2 id="滚动条-api" tabindex="-1">滚动条 API <a class="header-anchor" href="#滚动条-api" aria-label="Permalink to &quot;滚动条 API&quot;">​</a></h2><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td><code>height</code></td><td>容器高度</td><td><code>number</code></td><td>—</td><td><code>300</code></td></tr><tr><td><code>permanent</code></td><td>滚动条是否常驻</td><td><code>boolean</code></td><td>—</td><td><code>false</code></td></tr></tbody></table><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td><code>scroll-y</code></td><td>垂直滚动事件</td><td><code>(element: HTMLElement)</code></td></tr><tr><td><code>scroll-x</code></td><td>水平滚动事件</td><td><code>(element: HTMLElement)</code></td></tr><tr><td><code>click-track</code></td><td>滚动条轨道点击事件</td><td><code>(element: HTMLElement)</code></td></tr></tbody></table><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><table><thead><tr><th>插槽名</th><th>说明</th><th>作用域参数</th></tr></thead><tbody><tr><td><code>default</code></td><td>滚动容器的内容</td><td>—</td></tr></tbody></table><h3 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h3><p>组件暴露了以下方法，可以通过ref调用：</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td><code>scrollTo</code></td><td>滚动到指定位置</td><td><code>(options: ScrollToOptions)</code></td></tr><tr><td><code>updateScrollbar</code></td><td>更新滚动条状态</td><td>—</td></tr><tr><td><code>setScrollbar</code></td><td>设置滚动条位置</td><td><code>(mobile: number, direction: &#39;top&#39; | &#39;left&#39; | &#39;none&#39;)</code></td></tr></tbody></table><h3 id="样式变量" tabindex="-1">样式变量 <a class="header-anchor" href="#样式变量" aria-label="Permalink to &quot;样式变量&quot;">​</a></h3><p>滚动条组件使用了以下样式变量，可通过 SCSS 变量进行自定义：</p><table><thead><tr><th>变量名</th><th>说明</th></tr></thead><tbody><tr><td>$scrollbar-size</td><td>滚动条大小</td></tr><tr><td>$scrollbar-bg</td><td>滚动条背景色</td></tr><tr><td>$scrollbar-thumb-color</td><td>滚动条滑块颜色</td></tr><tr><td>$bg-color-default</td><td>默认背景颜色</td></tr></tbody></table>',13))])}}});export{ct as __pageData,it as default};
