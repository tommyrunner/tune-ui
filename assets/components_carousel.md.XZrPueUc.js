import{_ as l,C as n,c as i,S as o,H as r,m as t,a as e,o as s,ae as h}from"./chunks/framework.DspTsRPu.js";const y=JSON.parse('{"title":"轮播组件","description":"","frontmatter":{},"headers":[],"relativePath":"components/carousel.md","filePath":"components/carousel.md"}'),u={name:"components/carousel.md"};function m(p,d,c,b,x,f){const a=n("demo");return s(),i("div",null,[d[0]||(d[0]=o('<h1 id="轮播组件" tabindex="-1">轮播组件 <a class="header-anchor" href="#轮播组件" aria-label="Permalink to &quot;轮播组件&quot;">​</a></h1><p><img src="'+h+'" alt="轮播组件"></p><p>轮播组件用于在有限空间内循环展示多个内容项，支持自动播放、切换动画和指示器控制。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>轮播组件由 <code>TCarouselGroup</code> 容器和多个 <code>TCarousel</code> 项组成，默认展示水平方向轮播。</p>',5)),r(a,{"component-name":"carousel",examples:"basic"}),d[1]||(d[1]=t("h2",{id:"尺寸与初始位置",tabindex:"-1"},[e("尺寸与初始位置 "),t("a",{class:"header-anchor",href:"#尺寸与初始位置","aria-label":'Permalink to "尺寸与初始位置"'},"​")],-1)),d[2]||(d[2]=t("p",null,[e("通过 "),t("code",null,"width"),e(" 和 "),t("code",null,"height"),e(" 属性设置轮播容器尺寸，"),t("code",null,"initIndex"),e(" 属性设置初始显示项的索引。")],-1)),r(a,{"component-name":"carousel",examples:"size"}),d[3]||(d[3]=t("h2",{id:"自动播放",tabindex:"-1"},[e("自动播放 "),t("a",{class:"header-anchor",href:"#自动播放","aria-label":'Permalink to "自动播放"'},"​")],-1)),d[4]||(d[4]=t("p",null,[e("设置 "),t("code",null,"autoplay"),e(" 属性启用自动播放，"),t("code",null,"delay"),e(" 控制间隔时间，"),t("code",null,"autoplayBack"),e(" 控制播放方向，"),t("code",null,"pauseOnHover"),e(" 控制鼠标悬停是否暂停。")],-1)),r(a,{"component-name":"carousel",examples:"autoplay"}),d[5]||(d[5]=t("h2",{id:"切换效果",tabindex:"-1"},[e("切换效果 "),t("a",{class:"header-anchor",href:"#切换效果","aria-label":'Permalink to "切换效果"'},"​")],-1)),d[6]||(d[6]=t("p",null,[e("通过 "),t("code",null,"toggle"),e(" 属性配置不同的切换效果，包括视觉差（vision）、重复（repeat）、反复（repeatedly）和不循环（none）模式，"),t("code",null,"animation"),e(" 属性控制是否启用动画。")],-1)),r(a,{"component-name":"carousel",examples:"toggle"}),d[7]||(d[7]=t("h2",{id:"指示器与箭头",tabindex:"-1"},[e("指示器与箭头 "),t("a",{class:"header-anchor",href:"#指示器与箭头","aria-label":'Permalink to "指示器与箭头"'},"​")],-1)),d[8]||(d[8]=t("p",null,[t("code",null,"trigger"),e(" 属性配置指示器触发方式（hover、click、none），"),t("code",null,"arrow"),e(" 属性控制切换箭头的显示时机（always、hover、none）。")],-1)),r(a,{"component-name":"carousel",examples:"indicator"}),d[9]||(d[9]=t("h2",{id:"垂直方向轮播",tabindex:"-1"},[e("垂直方向轮播 "),t("a",{class:"header-anchor",href:"#垂直方向轮播","aria-label":'Permalink to "垂直方向轮播"'},"​")],-1)),d[10]||(d[10]=t("p",null,[e("设置 "),t("code",null,"direction"),e(" 属性为 "),t("code",null,"vertical"),e(" 可实现垂直方向轮播，默认为 "),t("code",null,"horizontal"),e("。")],-1)),r(a,{"component-name":"carousel",examples:"vertical"}),d[11]||(d[11]=t("h2",{id:"事件处理",tabindex:"-1"},[e("事件处理 "),t("a",{class:"header-anchor",href:"#事件处理","aria-label":'Permalink to "事件处理"'},"​")],-1)),d[12]||(d[12]=t("p",null,[e("轮播组件支持 "),t("code",null,"change"),e(" 事件（轮播切换时触发）和 "),t("code",null,"autoplay"),e(" 事件（自动播放切换时触发）。")],-1)),r(a,{"component-name":"carousel",examples:"events"}),d[13]||(d[13]=o('<h2 id="轮播组件-api" tabindex="-1">轮播组件 API <a class="header-anchor" href="#轮播组件-api" aria-label="Permalink to &quot;轮播组件 API&quot;">​</a></h2><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>width</td><td>容器宽度</td><td>number</td><td>—</td><td>300</td></tr><tr><td>height</td><td>容器高度</td><td>number</td><td>—</td><td>200</td></tr><tr><td>delay</td><td>轮播间隔时间(ms)</td><td>number</td><td>—</td><td>2200</td></tr><tr><td>initIndex</td><td>初始化下标</td><td>number</td><td>—</td><td>0</td></tr><tr><td>autoplay</td><td>是否自动播放</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>autoplayBack</td><td>轮播方向(true:前进,false:后退)</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>pauseOnHover</td><td>鼠标悬停是否暂停</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>animation</td><td>是否开启切换动画</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>trigger</td><td>指示器触发方式</td><td>string</td><td>hover / click / none</td><td>hover</td></tr><tr><td>arrow</td><td>切换箭头显示时机</td><td>string</td><td>always / hover / none</td><td>hover</td></tr><tr><td>direction</td><td>轮播方向</td><td>string</td><td>horizontal / vertical</td><td>horizontal</td></tr><tr><td>toggle</td><td>内容轮播方式</td><td>string</td><td>vision / repeat / repeatedly / none</td><td>vision</td></tr></tbody></table><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>轮播切换时触发</td><td>(index: <code>number</code>)</td></tr><tr><td>autoplay</td><td>自动播放切换时触发</td><td>(index: <code>number</code>)</td></tr></tbody></table><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><table><thead><tr><th>插槽名</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>轮播项内容，通常放置 <code>TCarousel</code> 组件</td></tr></tbody></table><h3 id="样式变量" tabindex="-1">样式变量 <a class="header-anchor" href="#样式变量" aria-label="Permalink to &quot;样式变量&quot;">​</a></h3><p>轮播组件使用了以下样式变量，可通过 SCSS 变量进行自定义：</p><table><thead><tr><th>变量名</th><th>说明</th></tr></thead><tbody><tr><td>$z-index-show</td><td>显示层级</td></tr><tr><td>$bg-color-hover</td><td>背景色-悬停</td></tr><tr><td>$border-color-default</td><td>边框颜色-默认</td></tr></tbody></table>',10))])}const k=l(u,[["render",m]]);export{y as __pageData,k as default};
