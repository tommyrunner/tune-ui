import{_ as l,C as n,c as s,S as o,H as r,m as d,a as e,o as i,at as m}from"./chunks/framework.DspTsRPu.js";const P=JSON.parse('{"title":"文本域组件","description":"","frontmatter":{},"headers":[],"relativePath":"components/textarea.md","filePath":"components/textarea.md"}'),h={name:"components/textarea.md"};function p(u,t,b,x,f,c){const a=n("demo");return i(),s("div",null,[t[0]||(t[0]=o('<h1 id="文本域组件" tabindex="-1">文本域组件 <a class="header-anchor" href="#文本域组件" aria-label="Permalink to &quot;文本域组件&quot;">​</a></h1><p><img src="'+m+'" alt="文本域组件"></p><p>文本域组件，用于多行文本输入，支持自适应高度、字数限制、换行控制等功能。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>基础的文本域用法，通过<code>v-model</code>绑定文本域的值。</p>',5)),r(a,{"component-name":"textarea",examples:"basic"}),t[1]||(t[1]=d("h2",{id:"禁用状态",tabindex:"-1"},[e("禁用状态 "),d("a",{class:"header-anchor",href:"#禁用状态","aria-label":'Permalink to "禁用状态"'},"​")],-1)),t[2]||(t[2]=d("p",null,[e("添加"),d("code",null,"disabled"),e("属性可以禁用文本域。")],-1)),r(a,{"component-name":"textarea",examples:"disabled"}),t[3]||(t[3]=d("h2",{id:"大小调整",tabindex:"-1"},[e("大小调整 "),d("a",{class:"header-anchor",href:"#大小调整","aria-label":'Permalink to "大小调整"'},"​")],-1)),t[4]||(t[4]=d("p",null,[e("文本域默认可以调整大小，通过"),d("code",null,"isResize"),e("属性可以控制是否允许调整大小。")],-1)),r(a,{"component-name":"textarea",examples:"resize"}),t[5]||(t[5]=d("h2",{id:"换行控制",tabindex:"-1"},[e("换行控制 "),d("a",{class:"header-anchor",href:"#换行控制","aria-label":'Permalink to "换行控制"'},"​")],-1)),t[6]||(t[6]=d("p",null,[e("文本域默认允许换行，通过"),d("code",null,"isEnter"),e("属性可以控制是否允许换行。")],-1)),r(a,{"component-name":"textarea",examples:"enter"}),t[7]||(t[7]=d("h2",{id:"字数限制",tabindex:"-1"},[e("字数限制 "),d("a",{class:"header-anchor",href:"#字数限制","aria-label":'Permalink to "字数限制"'},"​")],-1)),t[8]||(t[8]=d("p",null,[e("设置"),d("code",null,"maxLength"),e("属性可以限制文本域的最大输入长度，默认会显示当前光标所在行数和字数统计，可以通过"),d("code",null,"isCursor"),e("属性控制是否显示光标行数。")],-1)),r(a,{"component-name":"textarea",examples:"maxlength"}),t[9]||(t[9]=d("h2",{id:"防抖输入",tabindex:"-1"},[e("防抖输入 "),d("a",{class:"header-anchor",href:"#防抖输入","aria-label":'Permalink to "防抖输入"'},"​")],-1)),t[10]||(t[10]=d("p",null,[e("设置"),d("code",null,"debounce"),e("属性可以实现防抖输入，延迟触发输入事件。")],-1)),r(a,{"component-name":"textarea",examples:"debounce"}),t[11]||(t[11]=d("h2",{id:"不同尺寸",tabindex:"-1"},[e("不同尺寸 "),d("a",{class:"header-anchor",href:"#不同尺寸","aria-label":'Permalink to "不同尺寸"'},"​")],-1)),t[12]||(t[12]=d("p",null,"文本域支持三种尺寸：small、default 和 large。",-1)),r(a,{"component-name":"textarea",examples:"size"}),t[13]||(t[13]=d("h2",{id:"事件处理",tabindex:"-1"},[e("事件处理 "),d("a",{class:"header-anchor",href:"#事件处理","aria-label":'Permalink to "事件处理"'},"​")],-1)),t[14]||(t[14]=d("p",null,"文本域提供了多种事件：focus、blur、enter、input。",-1)),r(a,{"component-name":"textarea",examples:"events"}),t[15]||(t[15]=o('<h2 id="文本域-api" tabindex="-1">文本域 API <a class="header-anchor" href="#文本域-api" aria-label="Permalink to &quot;文本域 API&quot;">​</a></h2><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><table><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>绑定值</td><td>string</td><td>—</td><td>—</td></tr><tr><td>size</td><td>尺寸</td><td>string</td><td>small / default / large</td><td>default</td></tr><tr><td>placeholder</td><td>占位文本</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>maxLength</td><td>最大输入长度</td><td>number</td><td>—</td><td>—</td></tr><tr><td>isCursor</td><td>是否显示当前光标所在行数</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>isResize</td><td>是否允许调整大小</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>isEnter</td><td>是否允许换行输入</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>isTip</td><td>是否显示提示文本</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>tip</td><td>自定义提示文本</td><td>string</td><td>—</td><td>—</td></tr><tr><td>tipClass</td><td>提示文本类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>debounce</td><td>防抖事件回调</td><td>(data?: string) =&gt; void</td><td>—</td><td>—</td></tr><tr><td>debounceDelay</td><td>防抖延迟时间(ms)</td><td>number</td><td>—</td><td>1000</td></tr></tbody></table><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>focus</td><td>获得焦点时触发</td><td>(value: <code>string</code>)</td></tr><tr><td>blur</td><td>失去焦点时触发</td><td>(value: <code>string</code>)</td></tr><tr><td>input</td><td>输入值变化时触发</td><td>(value: <code>string</code>)</td></tr><tr><td>enter</td><td>按下回车键时触发</td><td>(value: <code>string</code>)</td></tr><tr><td>clear</td><td>点击清空按钮时触发</td><td>—</td></tr></tbody></table><h3 id="样式变量" tabindex="-1">样式变量 <a class="header-anchor" href="#样式变量" aria-label="Permalink to &quot;样式变量&quot;">​</a></h3><p>文本域组件使用了以下样式变量，可通过 SCSS 变量进行自定义：</p><table><thead><tr><th>变量名</th><th>说明</th></tr></thead><tbody><tr><td>$theme-color-primary</td><td>主题色-主要</td></tr><tr><td>$border-color-default</td><td>边框颜色-默认</td></tr><tr><td>$font-size-default</td><td>字体大小-默认</td></tr></tbody></table>',8))])}const k=l(h,[["render",p]]);export{P as __pageData,k as default};
