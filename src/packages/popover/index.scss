@import "@/styles/index.scss";

.t-popover {
  position: relative;
  width: fit-content;
}
._t-popover {
  min-width: 46px;
  background-color: white;
  border: 1px solid gainsboro;
  box-shadow: 0px 0px 2px gainsboro;
  color: $text-color-default;
  font-size: $font-size-default;
  word-wrap: break-word;
  position: absolute;
  transition: 0.22s;
  border-radius: 8px;
  padding: 8px 12px;
  box-sizing: border-box;
  ._triangle {
    position: absolute;

    > div {
      position: absolute;
      overflow: hidden;
      bottom: 0px;
      left: 0px;
      width: 0;
      height: 0;
      border-style: dashed solid dashed dashed;
    }
    > div:nth-child(1) {
      border-color: gainsboro transparent transparent transparent;
    }
    > div:nth-child(2) {
      border-color: white transparent transparent transparent;
    }
  }
  // 三角指向处理
  @mixin popover-triangle($position, $transform) {
    &._t-popover-#{$position} ._triangle {
      // 第一个div的变换
      > div {
        transform: #{$transform};
      }

      // 第二个div的偏移
      > div:nth-child(2) {
        @if $position == "top" {
          bottom: 1px;
        } @else if $position == "right" {
          left: 1px;
        } @else if $position == "bottom" {
          bottom: -1px;
        } @else if $position == "left" {
          left: -1px;
        }
      }
    }
  }
  @include popover-triangle("top", translateY(100%));
  @include popover-triangle("right", rotate(90deg) translate(50%, 100%));
  @include popover-triangle("bottom", rotate(180deg) translateY(0%));
  @include popover-triangle("left", rotate(270deg) translate(-50%, 0%));
}
._t-popover-throughout-center {
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
}

// 处理不同方向时出现，离开动画
@mixin popover-animation($position, $direction, $enter-translate, $leave-translate) {
  .t-popover-#{$position}-enter-active,
  .t-popover-#{$position}-leave-active {
    opacity: 1;
    transform: scale(1) #{$direction }($enter-translate);
  }

  .t-popover-#{$position}-enter-from,
  .t-popover-#{$position}-leave-to {
    opacity: 0;
    transform: scale(0.8) #{$direction }($leave-translate);
  }
}
// top动画
@include popover-animation("top", "translateY", 0%, 15%);

// right动画
@include popover-animation("right", "translateX", 0%, -15%);

// bottom动画
@include popover-animation("bottom", "translateY", 0%, -15%);

// left动画
@include popover-animation("left", "translateX", 0%, 15%);

// 处理遮罩层
._t-model {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;
  transition: 0.22s;
  background-color: $bg-color-model;
}

.t-model-enter-from,
.t-model-leave-to {
  opacity: 0;
}
// TODO: 可以优化，将动画抛出去除耦合
// dialog轴后的动画
._t-popover-dialog {
  position: fixed;
  transform: scale(1) translate(-50%, -50%);
  transform-origin: left;
}
.t-popover-dialog-enter-active,
.t-popover-dialog-leave-active {
  opacity: 1;
  transform: scale(1) translate(-50%, -50%);
}

.t-popover-dialog-enter-from,
.t-popover-dialog-leave-to {
  opacity: 0;
  transform: scale(0.8) translate(-50%, -50%);
}
// 处理不同方向 drawer 动画
@mixin popover-drawer-animation($position, $top, $right, $bottom, $left, $translate) {
  ._t-popover-drawer-#{$position} {
    position: fixed;
    @if $top != none {
      top: #{$top}px !important;
    }
    @if $right != none {
      right: #{$right}px !important;
    }
    @if $bottom != none {
      bottom: #{$bottom}px !important;
    }
    @if $left != none {
      left: #{$left}px !important;
    }
    transform: scale(1) translate(0, 0);
  }
  .t-popover-drawer-#{$position}-enter-from,
  .t-popover-drawer-#{$position}-leave-to {
    opacity: 0;
    transform: #{$translate};
  }
}
@include popover-drawer-animation("top", none, none, none, 0, translate(0%, -100%));
@include popover-drawer-animation("right", none, 0, none, none, translate(100%, 0%));
@include popover-drawer-animation("bottom", none, none, none, 0, translate(0%, 100%));
@include popover-drawer-animation("left", none, none, none, 0, translate(-100%, 0%));
